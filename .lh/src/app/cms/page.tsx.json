{
    "sourceFile": "src/app/cms/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1747727881103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747727904034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n \n const Container = styled.div<{ $themeMode: ThemeMode }>`\n   min-width: 1200px;\n   width: 100%;\n-  padding: 30px 40px;\n+  /* padding: 30px 40px; */\n   background-color: ${({ $themeMode }) =>\n     $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n   color: ${({ $themeMode }) =>\n     $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n"
                },
                {
                    "date": 1747727949677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,551 @@\n+\"use client\";\n+\n+import React, { useEffect, useState } from \"react\";\n+import styled from \"styled-components\";\n+import { ResponsivePie } from \"@nivo/pie\";\n+import { ResponsiveLine } from \"@nivo/line\";\n+import MyResponsiveBar from \"@/components/Chart/MyResponsiveBar\";\n+import { THEME_COLORS, ThemeMode } from \"@/styles/theme_colors\";\n+import GenericDateRangePicker from \"@/components/CustomList/GenericDateRangePicker\";\n+import dayjs from \"dayjs\";\n+\n+const PageWrapper = styled.div`\n+  width: 100%; // ✅ 수정: 부모(MainContent)의 너비를 그대로 따라감\n+  overflow-x: auto;\n+`;\n+\n+\n+\n+const LineChartHeader = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  margin-bottom: 10px;\n+`;\n+\n+const LineChartButtonGroup = styled.div`\n+  display: flex;\n+  gap: 8px;\n+`;\n+\n+const LineChartButton = styled.button.withConfig({\n+  shouldForwardProp: (prop) => prop !== \"active\",\n+})<{ active?: boolean }>`\n+  padding: 8px 16px;\n+  font-size: 14px;\n+  font-weight: 500;\n+  border: 1px solid ${({ active }) => (active ? \"#2f64cb\" : \"#ccc\")};\n+  background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#eee\")};\n+  color: ${({ active }) => (active ? \"#fff\" : \"#666\")};\n+  border-radius: 4px;\n+  cursor: pointer;\n+\n+  &:hover {\n+    background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#ddd\")};\n+  }\n+`;\n+\n+\n+\n+const TopListWrapper = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: 16px;\n+  margin-top: 16px;\n+`;\n+\n+const TopListItem = styled.div`\n+  display: flex;\n+  align-items: center;\n+  margin-top: 15px;\n+  height: 40px;\n+  \n+  justify-content: space-between;\n+`;\n+\n+const ProfileSection = styled.div`\n+  display: flex;\n+  align-items: center;\n+  gap: 12px;\n+  flex: 1;\n+`;\n+\n+const ProfileImage = styled.img`\n+  width: 40px;\n+  height: 40px;\n+  border-radius: 50%;\n+  object-fit: cover;\n+`;\n+\n+const NameDateBox = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+`;\n+\n+const Name = styled.div`\n+  font-size: 16px;\n+  color: #3e3e3e;\n+  font-weight: 500;\n+`;\n+\n+const DateText = styled.div`\n+  font-size: 14px;\n+  color: #808080;\n+`;\n+\n+const Price = styled.div`\n+  font-size: 16px;\n+  color: #3e3e3e;\n+  font-weight: 500;\n+  white-space: nowrap;\n+`;\n+\n+\n+const SearchButton = styled.button<{ $themeMode: ThemeMode }>`\n+  width: 60px;\n+  height: 40px;\n+  margin-left: 10px;\n+  background: ${({ $themeMode }) =>\n+    $themeMode === \"light\" ? THEME_COLORS.light.primary : THEME_COLORS.dark.buttonBackground};\n+  color: ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.buttonText : THEME_COLORS.dark.buttonText)};\n+  border: 1px solid\n+    ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.borderColor : THEME_COLORS.dark.borderColor)};\n+  border-left: none;\n+  border-radius: 0;\n+  font-weight: 500;\n+  font-size: 14px;\n+  cursor: pointer;\n+  transition: background-color 0.2s;\n+\n+  &:hover {\n+    opacity: 0.9;\n+  }\n+`;\n+\n+const Container = styled.div<{ $themeMode: ThemeMode }>`\n+  min-width: 1200px;\n+  width: 100%;\n+  padding: 30px;\n+  background-color: ${({ $themeMode }) =>\n+    $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n+  color: ${({ $themeMode }) =>\n+    $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n+  box-sizing: border-box;\n+`;\n+\n+\n+\n+const TopHeader = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  width: 100%;\n+  /* margin-bottom: 20px; */\n+  gap: 15px;\n+`;\n+\n+const ControlHeader = styled(TopHeader)``;\n+\n+const visitMeta = {\n+  title: \"방문유형 (PC · Mobile)\",\n+  accessCount: { pc: 150, mobile: 40 },\n+  accessUser: { pc: 140, mobile: 25 },\n+};\n+\n+const labels = [\"7일전\", \"6일전\", \"5일전\", \"4일전\", \"3일전\", \"2일전\", \"기준일\"];\n+\n+const dummyLineData = [\n+  {\n+    id: \"AI 사용량\",\n+    data: [\n+      { x: \"2025.05.07\", y: 3 },\n+      { x: \"2025.05.08\", y: 4 },\n+      { x: \"2025.05.09\", y: 7 },\n+      { x: \"2025.05.10\", y: 7 },\n+      { x: \"2025.05.11\", y: 10 },\n+      { x: \"2025.05.12\", y: 11 },\n+      { x: \"2025.05.13\", y: 14 },\n+    ],\n+  },\n+];\n+\n+const barChartMeta = [\n+  {\n+    title: \"누적 가입 고객수(명)\",\n+    total: 1234,\n+    period: 41,\n+    week: 41,\n+    counts: [8, 5, 3, 3, 10, 10, 2],\n+  },\n+  {\n+    title: \"견적 다운로드(건)\",\n+    total: 200,\n+    period: 40,\n+    week: 40,\n+    counts: [5, 3, 4, 6, 7, 10, 5],\n+  },\n+  {\n+    title: \"AI 답변 확인 필요(건)\",\n+    total: 87,\n+    period: 29,\n+    week: 29,\n+    counts: [4, 4, 5, 5, 4, 4, 3],\n+  },\n+  {\n+    title: \"견적 문의 요청(건)\",\n+    total: 100,\n+    period: 40,\n+    week: 40,\n+    counts: [3, 3, 4, 6, 8, 10, 6],\n+  },\n+  {\n+    title: \"견적 PDF 다운로드(건)\",\n+    total: 88,\n+    period: 39,\n+    week: 39,\n+    counts: [8, 5, 3, 3, 10, 10, 2],\n+  },\n+].map((item) => ({\n+  ...item,\n+  data: labels.map((label, i) => ({\n+    label,\n+    count: item.counts[i],\n+  })),\n+}));\n+\n+const DashboardWrapper = styled.div`\n+  display: flex;\n+  flex-wrap: wrap;\n+  gap: 16px;\n+  width: 100%;\n+  box-sizing: border-box;\n+`;\n+\n+\n+\n+\n+const ChartCard = styled.div`\n+  background: #fff;\n+  border: 1px solid #dbdfea;\n+  border-radius: 8px;\n+  flex: 1 1 calc((100% - 32px) / 3); // gap 16px × 2\n+  min-width: 360px;\n+  height: 430px;\n+  padding: 20px;\n+  box-sizing: border-box;\n+  display: flex;\n+  flex-direction: column;\n+`;\n+\n+\n+\n+const LineChartCard = styled(ChartCard)`\n+  width: 100%;\n+  grid-column: 1 / -1;\n+`;\n+\n+const MetaSection = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: 10px;\n+  margin-bottom: 20px;\n+`;\n+\n+const Row = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+`;\n+\n+const ChartContainer = styled.div`\n+  height: 280px;\n+`;\n+\n+const Title = styled.div`\n+  font-size: 15px;\n+  font-weight: 700;\n+  color: #000;\n+`;\n+\n+const Value = styled.div`\n+  font-size: 15px;\n+  font-weight: 700;\n+  color: #000;\n+`;\n+\n+const Label = styled.div`\n+  font-size: 13px;\n+  color: #999;\n+`;\n+\n+interface TopItem {\n+  name: string;\n+  date: string;\n+  value: string; // 금액 또는 횟수\n+}\n+\n+\n+const dummyRequestTop5: TopItem[] = [\n+  { name: \"IoT 앱\", date: \"2시간 전\", value: \"30,000,000원\" },\n+  { name: \"식음료\", date: \"한달 전\", value: \"40,600,000원\" },\n+  { name: \"AI\", date: \"25.03.14\", value: \"90,000,000원\" },\n+  { name: \"전산\", date: \"25.02.13\", value: \"80,500,000원\" },\n+  { name: \"IoT 앱\", date: \"25.01.12\", value: \"30,000,000원\" },\n+];\n+\n+const dummyDownloadTop5: TopItem[] = [\n+  { name: \"보안시스템\", date: \"방금 전\", value: \"25,000,000원\" },\n+  { name: \"의료기기\", date: \"1시간 전\", value: \"50,000,000원\" },\n+  { name: \"스마트홈\", date: \"25.03.11\", value: \"15,000,000원\" },\n+  { name: \"에너지관리\", date: \"25.02.25\", value: \"12,300,000원\" },\n+  { name: \"AI 분석\", date: \"25.02.01\", value: \"32,000,000원\" },\n+];\n+\n+const dummyAccessTop5: TopItem[] = [\n+  { name: \"Lucas\", date: \"25.05.14\", value: \"20회\" },\n+  { name: \"David\", date: \"25.05.13\", value: \"16회\" },\n+  { name: \"Elena\", date: \"25.05.12\", value: \"12회\" },\n+  { name: \"오하연\", date: \"25.05.11\", value: \"8회\" },\n+  { name: \"정혜진\", date: \"25.05.10\", value: \"6회\" },\n+];\n+\n+\n+\n+// ---------- ChartCard Renderer ----------\n+const renderBarChartCard = (item: typeof barChartMeta[number]) => (\n+  <ChartCard key={item.title}>\n+    <MetaSection>\n+      <Row>\n+        <Title>{item.title}</Title>\n+        <Value>{item.total.toLocaleString()}</Value>\n+      </Row>\n+      <Row>\n+        <Label>기간내</Label>\n+        <Label>{item.period}</Label>\n+      </Row>\n+      <Row>\n+        <Label>7일내</Label>\n+        <Label>{item.week}</Label>\n+      </Row>\n+    </MetaSection>\n+    <ChartContainer>\n+      <MyResponsiveBar data={item.data} />\n+    </ChartContainer>\n+  </ChartCard>\n+);\n+\n+const renderTopListCard = (title: string, items: { name: string; date: string; value: string }[]) => (\n+  <ChartCard key={title}>\n+    <Title>{title}</Title>\n+    <TopListWrapper>\n+      {items.map((item, i) => (\n+        <TopListItem key={i}>\n+          <ProfileSection>\n+            <ProfileImage src=\"/icon_user.png\" alt=\"user\" />\n+            <NameDateBox>\n+              <Name>{item.name}</Name>\n+              <DateText>{item.date}</DateText>\n+            </NameDateBox>\n+          </ProfileSection>\n+          <Price>{item.value}</Price>\n+        </TopListItem>\n+      ))}\n+    </TopListWrapper>\n+  </ChartCard>\n+);\n+\n+const renderVisitPieCard = () => {\n+  const data = visitMeta.accessUser;\n+  return (\n+    <ChartCard>\n+      <Title>방문유형 (PC · Mobile)</Title>\n+      <MetaSection>\n+        {[\"접속수별\", \"접속자별\"].map((label, idx) => {\n+          const key = idx === 0 ? \"accessCount\" : \"accessUser\";\n+          const row = visitMeta[key as \"accessCount\" | \"accessUser\"];\n+          const total = row.pc + row.mobile;\n+          return (\n+            <Row key={label}>\n+              <Label style={{ color: \"#324c8e\", minWidth: 80 }}>{label}</Label>\n+              <Value style={{ color: \"#324c8e\" }}>{row.pc}</Value>\n+              <Value style={{ color: \"#678b6c\" }}>{row.mobile}</Value>\n+              <Value>{total}</Value>\n+            </Row>\n+          );\n+        })}\n+      </MetaSection>\n+      <ChartContainer>\n+        <ResponsivePie\n+          data={[\n+            { id: \"PC\", label: \"PC\", value: visitMeta.accessUser.pc },\n+            { id: \"Mobile\", label: \"Mobile\", value: visitMeta.accessUser.mobile },\n+          ]}\n+          margin={{ top: 0, right: 10, bottom: 20, left: 10 }}\n+          innerRadius={0.6}\n+          padAngle={1}\n+          cornerRadius={3}\n+          enableArcLabels={false}\n+          enableArcLinkLabels={false}\n+          tooltip={() => null}\n+          colors={[\"#324c8e\", \"#678b6c\"]}\n+          layers={[\n+            \"arcs\",\n+            ({ centerX, centerY }) => (\n+              <>\n+                <text x={centerX} y={centerY - 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n+                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#324c8e\" }}>\n+                  PC: {visitMeta.accessUser.pc}\n+                </text>\n+                <text x={centerX} y={centerY + 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n+                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#678b6c\" }}>\n+                  Mobile: {visitMeta.accessUser.mobile}\n+                </text>\n+              </>\n+            ),\n+          ]}\n+        />\n+      </ChartContainer>\n+    </ChartCard>\n+  );\n+};\n+\n+// ---------- Main Page ----------\n+const CmsDashboardPage = () => {\n+  const [fromDate, setFromDate] = useState(dayjs().subtract(6, \"month\").format(\"YYYY-MM-DD\"));\n+  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n+  const [visitorView, setVisitorView] = useState(\"월간\");\n+\n+  const handleDateChangeInternal = (newFrom: string, newTo: string) => {\n+    setFromDate(newFrom);\n+    setToDate(newTo);\n+  };\n+\n+  const visitorData = [\n+    {\n+      id: \"방문자 수\",\n+      data: [\n+        { x: \"1\", y: 30 },\n+        { x: \"2\", y: 50 },\n+        { x: \"3\", y: 20 },\n+        { x: \"4\", y: 16 },\n+        { x: \"5\", y: 18 },\n+        { x: \"6\", y: 16 },\n+        { x: \"7\", y: 16 },\n+        { x: \"8\", y: 62 },\n+        { x: \"9\", y: 48 },\n+        { x: \"10\", y: 40 },\n+        { x: \"11\", y: 12 },\n+        { x: \"12\", y: 14 },\n+        { x: \"13\", y: 30 },\n+      ],\n+    },\n+  ];\n+\n+  return (\n+    <PageWrapper>\n+    <Container $themeMode=\"light\">\n+      <TopHeader>\n+        <h1>CMS 대시보드</h1>\n+      </TopHeader>\n+\n+      <ControlHeader>\n+        <GenericDateRangePicker\n+          initialFromDate={fromDate}\n+          initialToDate={toDate}\n+          onDateChange={handleDateChangeInternal}\n+          themeMode=\"light\"\n+        />\n+        <SearchButton $themeMode=\"light\">조회</SearchButton>\n+      </ControlHeader>\n+\n+      <DashboardWrapper>\n+        {/* 1행 */}\n+        {renderBarChartCard(barChartMeta[0])}\n+        <ChartCard>\n+\n+    <LineChartHeader>\n+    <Title>방문자 수(건)</Title>\n+    <Value>40</Value>\n+    <LineChartButtonGroup>\n+      {['주간', '월간', '연간'].map((label) => (\n+        <LineChartButton\n+          key={label}\n+          active={visitorView === label}\n+          onClick={() => setVisitorView(label)}>\n+          {label}\n+        </LineChartButton>\n+      ))}\n+    </LineChartButtonGroup>\n+  </LineChartHeader>\n+\n+  <ChartContainer>\n+    <ResponsiveLine\n+      data={visitorData}\n+      margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n+      xScale={{ type: \"point\" }}\n+      yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n+      axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n+      axisLeft={null}\n+      enableArea={false}\n+      colors={[\"#2f64cb\"]}\n+      lineWidth={2}\n+      pointSize={6}\n+      pointColor=\"#fff\"\n+      pointBorderWidth={2}\n+      pointBorderColor=\"#2f64cb\"\n+      useMesh\n+    />\n+  </ChartContainer>\n+</ChartCard>\n+        {renderVisitPieCard()}\n+\n+        {/* 2행 */}\n+        {renderBarChartCard(barChartMeta[3])}\n+        {renderTopListCard(\"견적 문의 대상 TOP 5\", dummyRequestTop5)}\n+        {renderBarChartCard(barChartMeta[2])}\n+\n+        {/* 3행 */}\n+        {renderBarChartCard(barChartMeta[4])}\n+        {renderTopListCard(\"견적 다운로드 TOP 5\", dummyDownloadTop5)}\n+        {renderTopListCard(\"자주 접속 TOP 5\", dummyAccessTop5)}\n+\n+\n+        {/* 마지막: AI 사용 현황 */}\n+        <LineChartCard>\n+          <LineChartHeader>\n+            <Title>AI 사용 현황</Title>\n+            <LineChartButtonGroup>\n+              <LineChartButton active>주간</LineChartButton>\n+              <LineChartButton>월간</LineChartButton>\n+              <LineChartButton>연간</LineChartButton>\n+            </LineChartButtonGroup>\n+          </LineChartHeader>\n+          <ChartContainer>\n+            <ResponsiveLine\n+              data={dummyLineData}\n+              margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n+              xScale={{ type: \"point\" }}\n+              yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n+              axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n+              axisLeft={null}\n+              enableArea\n+              areaOpacity={0.15}\n+              colors={[\"#2f64cb\"]}\n+              lineWidth={3}\n+              pointSize={6}\n+              pointColor=\"#2f64cb\"\n+              pointBorderWidth={2}\n+              pointBorderColor=\"#fff\"\n+              useMesh\n+            />\n+          </ChartContainer>\n+        </LineChartCard>\n+      </DashboardWrapper>\n+    </Container>\n+    </PageWrapper>\n+  );\n+};\n+\n+\n+\n+export default CmsDashboardPage;\n"
                },
                {
                    "date": 1747727999942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,553 @@\n+\"use client\";\n+\n+import React, { useEffect, useState } from \"react\";\n+import styled from \"styled-components\";\n+import { ResponsivePie } from \"@nivo/pie\";\n+import { ResponsiveLine } from \"@nivo/line\";\n+import MyResponsiveBar from \"@/components/Chart/MyResponsiveBar\";\n+import { THEME_COLORS, ThemeMode } from \"@/styles/theme_colors\";\n+import GenericDateRangePicker from \"@/components/CustomList/GenericDateRangePicker\";\n+import dayjs from \"dayjs\";\n+\n+const PageWrapper = styled.div`\n+  width: 100%; // ✅ 수정: 부모(MainContent)의 너비를 그대로 따라감\n+  overflow-x: auto;\n+`;\n+\n+\n+\n+const LineChartHeader = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  margin-bottom: 10px;\n+`;\n+\n+const LineChartButtonGroup = styled.div`\n+  display: flex;\n+  gap: 8px;\n+`;\n+\n+const LineChartButton = styled.button.withConfig({\n+  shouldForwardProp: (prop) => prop !== \"active\",\n+})<{ active?: boolean }>`\n+  padding: 8px 16px;\n+  font-size: 14px;\n+  font-weight: 500;\n+  border: 1px solid ${({ active }) => (active ? \"#2f64cb\" : \"#ccc\")};\n+  background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#eee\")};\n+  color: ${({ active }) => (active ? \"#fff\" : \"#666\")};\n+  border-radius: 4px;\n+  cursor: pointer;\n+\n+  &:hover {\n+    background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#ddd\")};\n+  }\n+`;\n+\n+\n+\n+const TopListWrapper = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: 16px;\n+  margin-top: 16px;\n+`;\n+\n+const TopListItem = styled.div`\n+  display: flex;\n+  align-items: center;\n+  margin-top: 15px;\n+  height: 40px;\n+  \n+  justify-content: space-between;\n+`;\n+\n+const ProfileSection = styled.div`\n+  display: flex;\n+  align-items: center;\n+  gap: 12px;\n+  flex: 1;\n+`;\n+\n+const ProfileImage = styled.img`\n+  width: 40px;\n+  height: 40px;\n+  border-radius: 50%;\n+  object-fit: cover;\n+`;\n+\n+const NameDateBox = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+`;\n+\n+const Name = styled.div`\n+  font-size: 16px;\n+  color: #3e3e3e;\n+  font-weight: 500;\n+`;\n+\n+const DateText = styled.div`\n+  font-size: 14px;\n+  color: #808080;\n+`;\n+\n+const Price = styled.div`\n+  font-size: 16px;\n+  color: #3e3e3e;\n+  font-weight: 500;\n+  white-space: nowrap;\n+`;\n+\n+\n+const SearchButton = styled.button<{ $themeMode: ThemeMode }>`\n+  width: 60px;\n+  height: 40px;\n+  margin-left: 10px;\n+  background: ${({ $themeMode }) =>\n+    $themeMode === \"light\" ? THEME_COLORS.light.primary : THEME_COLORS.dark.buttonBackground};\n+  color: ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.buttonText : THEME_COLORS.dark.buttonText)};\n+  border: 1px solid\n+    ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.borderColor : THEME_COLORS.dark.borderColor)};\n+  border-left: none;\n+  border-radius: 0;\n+  font-weight: 500;\n+  font-size: 14px;\n+  cursor: pointer;\n+  transition: background-color 0.2s;\n+\n+  &:hover {\n+    opacity: 0.9;\n+  }\n+`;\n+\n+const Container = styled.div<{ $themeMode: ThemeMode }>`\n+  min-width: 1200px;\n+  width: 100%;\n+  padding: 30px;\n+  background-color: ${({ $themeMode }) =>\n+    $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n+  color: ${({ $themeMode }) =>\n+    $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n+  box-sizing: border-box;\n+`;\n+\n+\n+\n+const TopHeader = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  width: 100%;\n+  margin-top: 20px;\n+  margin-bottom: 20px;\n+  /* margin-bottom: 20px; */\n+  gap: 15px;\n+`;\n+\n+const ControlHeader = styled(TopHeader)``;\n+\n+const visitMeta = {\n+  title: \"방문유형 (PC · Mobile)\",\n+  accessCount: { pc: 150, mobile: 40 },\n+  accessUser: { pc: 140, mobile: 25 },\n+};\n+\n+const labels = [\"7일전\", \"6일전\", \"5일전\", \"4일전\", \"3일전\", \"2일전\", \"기준일\"];\n+\n+const dummyLineData = [\n+  {\n+    id: \"AI 사용량\",\n+    data: [\n+      { x: \"2025.05.07\", y: 3 },\n+      { x: \"2025.05.08\", y: 4 },\n+      { x: \"2025.05.09\", y: 7 },\n+      { x: \"2025.05.10\", y: 7 },\n+      { x: \"2025.05.11\", y: 10 },\n+      { x: \"2025.05.12\", y: 11 },\n+      { x: \"2025.05.13\", y: 14 },\n+    ],\n+  },\n+];\n+\n+const barChartMeta = [\n+  {\n+    title: \"누적 가입 고객수(명)\",\n+    total: 1234,\n+    period: 41,\n+    week: 41,\n+    counts: [8, 5, 3, 3, 10, 10, 2],\n+  },\n+  {\n+    title: \"견적 다운로드(건)\",\n+    total: 200,\n+    period: 40,\n+    week: 40,\n+    counts: [5, 3, 4, 6, 7, 10, 5],\n+  },\n+  {\n+    title: \"AI 답변 확인 필요(건)\",\n+    total: 87,\n+    period: 29,\n+    week: 29,\n+    counts: [4, 4, 5, 5, 4, 4, 3],\n+  },\n+  {\n+    title: \"견적 문의 요청(건)\",\n+    total: 100,\n+    period: 40,\n+    week: 40,\n+    counts: [3, 3, 4, 6, 8, 10, 6],\n+  },\n+  {\n+    title: \"견적 PDF 다운로드(건)\",\n+    total: 88,\n+    period: 39,\n+    week: 39,\n+    counts: [8, 5, 3, 3, 10, 10, 2],\n+  },\n+].map((item) => ({\n+  ...item,\n+  data: labels.map((label, i) => ({\n+    label,\n+    count: item.counts[i],\n+  })),\n+}));\n+\n+const DashboardWrapper = styled.div`\n+  display: flex;\n+  flex-wrap: wrap;\n+  gap: 16px;\n+  width: 100%;\n+  box-sizing: border-box;\n+`;\n+\n+\n+\n+\n+const ChartCard = styled.div`\n+  background: #fff;\n+  border: 1px solid #dbdfea;\n+  border-radius: 8px;\n+  flex: 1 1 calc((100% - 32px) / 3); // gap 16px × 2\n+  min-width: 360px;\n+  height: 430px;\n+  padding: 20px;\n+  box-sizing: border-box;\n+  display: flex;\n+  flex-direction: column;\n+`;\n+\n+\n+\n+const LineChartCard = styled(ChartCard)`\n+  width: 100%;\n+  grid-column: 1 / -1;\n+`;\n+\n+const MetaSection = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: 10px;\n+  margin-bottom: 20px;\n+`;\n+\n+const Row = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+`;\n+\n+const ChartContainer = styled.div`\n+  height: 280px;\n+`;\n+\n+const Title = styled.div`\n+  font-size: 15px;\n+  font-weight: 700;\n+  color: #000;\n+`;\n+\n+const Value = styled.div`\n+  font-size: 15px;\n+  font-weight: 700;\n+  color: #000;\n+`;\n+\n+const Label = styled.div`\n+  font-size: 13px;\n+  color: #999;\n+`;\n+\n+interface TopItem {\n+  name: string;\n+  date: string;\n+  value: string; // 금액 또는 횟수\n+}\n+\n+\n+const dummyRequestTop5: TopItem[] = [\n+  { name: \"IoT 앱\", date: \"2시간 전\", value: \"30,000,000원\" },\n+  { name: \"식음료\", date: \"한달 전\", value: \"40,600,000원\" },\n+  { name: \"AI\", date: \"25.03.14\", value: \"90,000,000원\" },\n+  { name: \"전산\", date: \"25.02.13\", value: \"80,500,000원\" },\n+  { name: \"IoT 앱\", date: \"25.01.12\", value: \"30,000,000원\" },\n+];\n+\n+const dummyDownloadTop5: TopItem[] = [\n+  { name: \"보안시스템\", date: \"방금 전\", value: \"25,000,000원\" },\n+  { name: \"의료기기\", date: \"1시간 전\", value: \"50,000,000원\" },\n+  { name: \"스마트홈\", date: \"25.03.11\", value: \"15,000,000원\" },\n+  { name: \"에너지관리\", date: \"25.02.25\", value: \"12,300,000원\" },\n+  { name: \"AI 분석\", date: \"25.02.01\", value: \"32,000,000원\" },\n+];\n+\n+const dummyAccessTop5: TopItem[] = [\n+  { name: \"Lucas\", date: \"25.05.14\", value: \"20회\" },\n+  { name: \"David\", date: \"25.05.13\", value: \"16회\" },\n+  { name: \"Elena\", date: \"25.05.12\", value: \"12회\" },\n+  { name: \"오하연\", date: \"25.05.11\", value: \"8회\" },\n+  { name: \"정혜진\", date: \"25.05.10\", value: \"6회\" },\n+];\n+\n+\n+\n+// ---------- ChartCard Renderer ----------\n+const renderBarChartCard = (item: typeof barChartMeta[number]) => (\n+  <ChartCard key={item.title}>\n+    <MetaSection>\n+      <Row>\n+        <Title>{item.title}</Title>\n+        <Value>{item.total.toLocaleString()}</Value>\n+      </Row>\n+      <Row>\n+        <Label>기간내</Label>\n+        <Label>{item.period}</Label>\n+      </Row>\n+      <Row>\n+        <Label>7일내</Label>\n+        <Label>{item.week}</Label>\n+      </Row>\n+    </MetaSection>\n+    <ChartContainer>\n+      <MyResponsiveBar data={item.data} />\n+    </ChartContainer>\n+  </ChartCard>\n+);\n+\n+const renderTopListCard = (title: string, items: { name: string; date: string; value: string }[]) => (\n+  <ChartCard key={title}>\n+    <Title>{title}</Title>\n+    <TopListWrapper>\n+      {items.map((item, i) => (\n+        <TopListItem key={i}>\n+          <ProfileSection>\n+            <ProfileImage src=\"/icon_user.png\" alt=\"user\" />\n+            <NameDateBox>\n+              <Name>{item.name}</Name>\n+              <DateText>{item.date}</DateText>\n+            </NameDateBox>\n+          </ProfileSection>\n+          <Price>{item.value}</Price>\n+        </TopListItem>\n+      ))}\n+    </TopListWrapper>\n+  </ChartCard>\n+);\n+\n+const renderVisitPieCard = () => {\n+  const data = visitMeta.accessUser;\n+  return (\n+    <ChartCard>\n+      <Title>방문유형 (PC · Mobile)</Title>\n+      <MetaSection>\n+        {[\"접속수별\", \"접속자별\"].map((label, idx) => {\n+          const key = idx === 0 ? \"accessCount\" : \"accessUser\";\n+          const row = visitMeta[key as \"accessCount\" | \"accessUser\"];\n+          const total = row.pc + row.mobile;\n+          return (\n+            <Row key={label}>\n+              <Label style={{ color: \"#324c8e\", minWidth: 80 }}>{label}</Label>\n+              <Value style={{ color: \"#324c8e\" }}>{row.pc}</Value>\n+              <Value style={{ color: \"#678b6c\" }}>{row.mobile}</Value>\n+              <Value>{total}</Value>\n+            </Row>\n+          );\n+        })}\n+      </MetaSection>\n+      <ChartContainer>\n+        <ResponsivePie\n+          data={[\n+            { id: \"PC\", label: \"PC\", value: visitMeta.accessUser.pc },\n+            { id: \"Mobile\", label: \"Mobile\", value: visitMeta.accessUser.mobile },\n+          ]}\n+          margin={{ top: 0, right: 10, bottom: 20, left: 10 }}\n+          innerRadius={0.6}\n+          padAngle={1}\n+          cornerRadius={3}\n+          enableArcLabels={false}\n+          enableArcLinkLabels={false}\n+          tooltip={() => null}\n+          colors={[\"#324c8e\", \"#678b6c\"]}\n+          layers={[\n+            \"arcs\",\n+            ({ centerX, centerY }) => (\n+              <>\n+                <text x={centerX} y={centerY - 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n+                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#324c8e\" }}>\n+                  PC: {visitMeta.accessUser.pc}\n+                </text>\n+                <text x={centerX} y={centerY + 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n+                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#678b6c\" }}>\n+                  Mobile: {visitMeta.accessUser.mobile}\n+                </text>\n+              </>\n+            ),\n+          ]}\n+        />\n+      </ChartContainer>\n+    </ChartCard>\n+  );\n+};\n+\n+// ---------- Main Page ----------\n+const CmsDashboardPage = () => {\n+  const [fromDate, setFromDate] = useState(dayjs().subtract(6, \"month\").format(\"YYYY-MM-DD\"));\n+  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n+  const [visitorView, setVisitorView] = useState(\"월간\");\n+\n+  const handleDateChangeInternal = (newFrom: string, newTo: string) => {\n+    setFromDate(newFrom);\n+    setToDate(newTo);\n+  };\n+\n+  const visitorData = [\n+    {\n+      id: \"방문자 수\",\n+      data: [\n+        { x: \"1\", y: 30 },\n+        { x: \"2\", y: 50 },\n+        { x: \"3\", y: 20 },\n+        { x: \"4\", y: 16 },\n+        { x: \"5\", y: 18 },\n+        { x: \"6\", y: 16 },\n+        { x: \"7\", y: 16 },\n+        { x: \"8\", y: 62 },\n+        { x: \"9\", y: 48 },\n+        { x: \"10\", y: 40 },\n+        { x: \"11\", y: 12 },\n+        { x: \"12\", y: 14 },\n+        { x: \"13\", y: 30 },\n+      ],\n+    },\n+  ];\n+\n+  return (\n+    <PageWrapper>\n+    <Container $themeMode=\"light\">\n+      <TopHeader>\n+        <h1>CMS 대시보드</h1>\n+      </TopHeader>\n+\n+      <ControlHeader>\n+        <GenericDateRangePicker\n+          initialFromDate={fromDate}\n+          initialToDate={toDate}\n+          onDateChange={handleDateChangeInternal}\n+          themeMode=\"light\"\n+        />\n+        <SearchButton $themeMode=\"light\">조회</SearchButton>\n+      </ControlHeader>\n+\n+      <DashboardWrapper>\n+        {/* 1행 */}\n+        {renderBarChartCard(barChartMeta[0])}\n+        <ChartCard>\n+\n+    <LineChartHeader>\n+    <Title>방문자 수(건)</Title>\n+    <Value>40</Value>\n+    <LineChartButtonGroup>\n+      {['주간', '월간', '연간'].map((label) => (\n+        <LineChartButton\n+          key={label}\n+          active={visitorView === label}\n+          onClick={() => setVisitorView(label)}>\n+          {label}\n+        </LineChartButton>\n+      ))}\n+    </LineChartButtonGroup>\n+  </LineChartHeader>\n+\n+  <ChartContainer>\n+    <ResponsiveLine\n+      data={visitorData}\n+      margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n+      xScale={{ type: \"point\" }}\n+      yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n+      axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n+      axisLeft={null}\n+      enableArea={false}\n+      colors={[\"#2f64cb\"]}\n+      lineWidth={2}\n+      pointSize={6}\n+      pointColor=\"#fff\"\n+      pointBorderWidth={2}\n+      pointBorderColor=\"#2f64cb\"\n+      useMesh\n+    />\n+  </ChartContainer>\n+</ChartCard>\n+        {renderVisitPieCard()}\n+\n+        {/* 2행 */}\n+        {renderBarChartCard(barChartMeta[3])}\n+        {renderTopListCard(\"견적 문의 대상 TOP 5\", dummyRequestTop5)}\n+        {renderBarChartCard(barChartMeta[2])}\n+\n+        {/* 3행 */}\n+        {renderBarChartCard(barChartMeta[4])}\n+        {renderTopListCard(\"견적 다운로드 TOP 5\", dummyDownloadTop5)}\n+        {renderTopListCard(\"자주 접속 TOP 5\", dummyAccessTop5)}\n+\n+\n+        {/* 마지막: AI 사용 현황 */}\n+        <LineChartCard>\n+          <LineChartHeader>\n+            <Title>AI 사용 현황</Title>\n+            <LineChartButtonGroup>\n+              <LineChartButton active>주간</LineChartButton>\n+              <LineChartButton>월간</LineChartButton>\n+              <LineChartButton>연간</LineChartButton>\n+            </LineChartButtonGroup>\n+          </LineChartHeader>\n+          <ChartContainer>\n+            <ResponsiveLine\n+              data={dummyLineData}\n+              margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n+              xScale={{ type: \"point\" }}\n+              yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n+              axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n+              axisLeft={null}\n+              enableArea\n+              areaOpacity={0.15}\n+              colors={[\"#2f64cb\"]}\n+              lineWidth={3}\n+              pointSize={6}\n+              pointColor=\"#2f64cb\"\n+              pointBorderWidth={2}\n+              pointBorderColor=\"#fff\"\n+              useMesh\n+            />\n+          </ChartContainer>\n+        </LineChartCard>\n+      </DashboardWrapper>\n+    </Container>\n+    </PageWrapper>\n+  );\n+};\n+\n+\n+\n+export default CmsDashboardPage;\n"
                },
                {
                    "date": 1747728020313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,560 @@\n+\"use client\";\n+\n+import React, { useEffect, useState } from \"react\";\n+import styled from \"styled-components\";\n+import { ResponsivePie } from \"@nivo/pie\";\n+import { ResponsiveLine } from \"@nivo/line\";\n+import MyResponsiveBar from \"@/components/Chart/MyResponsiveBar\";\n+import { THEME_COLORS, ThemeMode } from \"@/styles/theme_colors\";\n+import GenericDateRangePicker from \"@/components/CustomList/GenericDateRangePicker\";\n+import dayjs from \"dayjs\";\n+\n+const PageWrapper = styled.div`\n+  width: 100%; // ✅ 수정: 부모(MainContent)의 너비를 그대로 따라감\n+  overflow-x: auto;\n+`;\n+\n+\n+\n+const LineChartHeader = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  margin-bottom: 10px;\n+`;\n+\n+const LineChartButtonGroup = styled.div`\n+  display: flex;\n+  gap: 8px;\n+`;\n+\n+const LineChartButton = styled.button.withConfig({\n+  shouldForwardProp: (prop) => prop !== \"active\",\n+})<{ active?: boolean }>`\n+  padding: 8px 16px;\n+  font-size: 14px;\n+  font-weight: 500;\n+  border: 1px solid ${({ active }) => (active ? \"#2f64cb\" : \"#ccc\")};\n+  background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#eee\")};\n+  color: ${({ active }) => (active ? \"#fff\" : \"#666\")};\n+  border-radius: 4px;\n+  cursor: pointer;\n+\n+  &:hover {\n+    background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#ddd\")};\n+  }\n+`;\n+\n+\n+\n+const TopListWrapper = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: 16px;\n+  margin-top: 16px;\n+`;\n+\n+const TopListItem = styled.div`\n+  display: flex;\n+  align-items: center;\n+  margin-top: 15px;\n+  height: 40px;\n+  \n+  justify-content: space-between;\n+`;\n+\n+const ProfileSection = styled.div`\n+  display: flex;\n+  align-items: center;\n+  gap: 12px;\n+  flex: 1;\n+`;\n+\n+const ProfileImage = styled.img`\n+  width: 40px;\n+  height: 40px;\n+  border-radius: 50%;\n+  object-fit: cover;\n+`;\n+\n+const NameDateBox = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+`;\n+\n+const Name = styled.div`\n+  font-size: 16px;\n+  color: #3e3e3e;\n+  font-weight: 500;\n+`;\n+\n+const DateText = styled.div`\n+  font-size: 14px;\n+  color: #808080;\n+`;\n+\n+const Price = styled.div`\n+  font-size: 16px;\n+  color: #3e3e3e;\n+  font-weight: 500;\n+  white-space: nowrap;\n+`;\n+\n+\n+const SearchButton = styled.button<{ $themeMode: ThemeMode }>`\n+  width: 60px;\n+  height: 40px;\n+  margin-left: 10px;\n+  background: ${({ $themeMode }) =>\n+    $themeMode === \"light\" ? THEME_COLORS.light.primary : THEME_COLORS.dark.buttonBackground};\n+  color: ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.buttonText : THEME_COLORS.dark.buttonText)};\n+  border: 1px solid\n+    ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.borderColor : THEME_COLORS.dark.borderColor)};\n+  border-left: none;\n+  border-radius: 0;\n+  font-weight: 500;\n+  font-size: 14px;\n+  cursor: pointer;\n+  transition: background-color 0.2s;\n+\n+  &:hover {\n+    opacity: 0.9;\n+  }\n+`;\n+\n+const Container = styled.div<{ $themeMode: ThemeMode }>`\n+  min-width: 1200px;\n+  width: 100%;\n+  padding: 30px;\n+  background-color: ${({ $themeMode }) =>\n+    $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n+  color: ${({ $themeMode }) =>\n+    $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n+  box-sizing: border-box;\n+`;\n+\n+\n+\n+const TopHeader = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  justify-content: space-between;\n+  margin-top: 20px;\n+  margin-bottom: 20px;\n+  flex-wrap: wrap;\n+  gap: 20px;\n+\n+  @media (max-width: 1400px) {\n+    width: 1150px;\n+  }\n+\n+  @media (min-width: 2050px) {\n+    width: 1800px;\n+  }\n+`;\n+\n+const ControlHeader = styled(TopHeader)``;\n+\n+const visitMeta = {\n+  title: \"방문유형 (PC · Mobile)\",\n+  accessCount: { pc: 150, mobile: 40 },\n+  accessUser: { pc: 140, mobile: 25 },\n+};\n+\n+const labels = [\"7일전\", \"6일전\", \"5일전\", \"4일전\", \"3일전\", \"2일전\", \"기준일\"];\n+\n+const dummyLineData = [\n+  {\n+    id: \"AI 사용량\",\n+    data: [\n+      { x: \"2025.05.07\", y: 3 },\n+      { x: \"2025.05.08\", y: 4 },\n+      { x: \"2025.05.09\", y: 7 },\n+      { x: \"2025.05.10\", y: 7 },\n+      { x: \"2025.05.11\", y: 10 },\n+      { x: \"2025.05.12\", y: 11 },\n+      { x: \"2025.05.13\", y: 14 },\n+    ],\n+  },\n+];\n+\n+const barChartMeta = [\n+  {\n+    title: \"누적 가입 고객수(명)\",\n+    total: 1234,\n+    period: 41,\n+    week: 41,\n+    counts: [8, 5, 3, 3, 10, 10, 2],\n+  },\n+  {\n+    title: \"견적 다운로드(건)\",\n+    total: 200,\n+    period: 40,\n+    week: 40,\n+    counts: [5, 3, 4, 6, 7, 10, 5],\n+  },\n+  {\n+    title: \"AI 답변 확인 필요(건)\",\n+    total: 87,\n+    period: 29,\n+    week: 29,\n+    counts: [4, 4, 5, 5, 4, 4, 3],\n+  },\n+  {\n+    title: \"견적 문의 요청(건)\",\n+    total: 100,\n+    period: 40,\n+    week: 40,\n+    counts: [3, 3, 4, 6, 8, 10, 6],\n+  },\n+  {\n+    title: \"견적 PDF 다운로드(건)\",\n+    total: 88,\n+    period: 39,\n+    week: 39,\n+    counts: [8, 5, 3, 3, 10, 10, 2],\n+  },\n+].map((item) => ({\n+  ...item,\n+  data: labels.map((label, i) => ({\n+    label,\n+    count: item.counts[i],\n+  })),\n+}));\n+\n+const DashboardWrapper = styled.div`\n+  display: flex;\n+  flex-wrap: wrap;\n+  gap: 16px;\n+  width: 100%;\n+  box-sizing: border-box;\n+`;\n+\n+\n+\n+\n+const ChartCard = styled.div`\n+  background: #fff;\n+  border: 1px solid #dbdfea;\n+  border-radius: 8px;\n+  flex: 1 1 calc((100% - 32px) / 3); // gap 16px × 2\n+  min-width: 360px;\n+  height: 430px;\n+  padding: 20px;\n+  box-sizing: border-box;\n+  display: flex;\n+  flex-direction: column;\n+`;\n+\n+\n+\n+const LineChartCard = styled(ChartCard)`\n+  width: 100%;\n+  grid-column: 1 / -1;\n+`;\n+\n+const MetaSection = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: 10px;\n+  margin-bottom: 20px;\n+`;\n+\n+const Row = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+`;\n+\n+const ChartContainer = styled.div`\n+  height: 280px;\n+`;\n+\n+const Title = styled.div`\n+  font-size: 15px;\n+  font-weight: 700;\n+  color: #000;\n+`;\n+\n+const Value = styled.div`\n+  font-size: 15px;\n+  font-weight: 700;\n+  color: #000;\n+`;\n+\n+const Label = styled.div`\n+  font-size: 13px;\n+  color: #999;\n+`;\n+\n+interface TopItem {\n+  name: string;\n+  date: string;\n+  value: string; // 금액 또는 횟수\n+}\n+\n+\n+const dummyRequestTop5: TopItem[] = [\n+  { name: \"IoT 앱\", date: \"2시간 전\", value: \"30,000,000원\" },\n+  { name: \"식음료\", date: \"한달 전\", value: \"40,600,000원\" },\n+  { name: \"AI\", date: \"25.03.14\", value: \"90,000,000원\" },\n+  { name: \"전산\", date: \"25.02.13\", value: \"80,500,000원\" },\n+  { name: \"IoT 앱\", date: \"25.01.12\", value: \"30,000,000원\" },\n+];\n+\n+const dummyDownloadTop5: TopItem[] = [\n+  { name: \"보안시스템\", date: \"방금 전\", value: \"25,000,000원\" },\n+  { name: \"의료기기\", date: \"1시간 전\", value: \"50,000,000원\" },\n+  { name: \"스마트홈\", date: \"25.03.11\", value: \"15,000,000원\" },\n+  { name: \"에너지관리\", date: \"25.02.25\", value: \"12,300,000원\" },\n+  { name: \"AI 분석\", date: \"25.02.01\", value: \"32,000,000원\" },\n+];\n+\n+const dummyAccessTop5: TopItem[] = [\n+  { name: \"Lucas\", date: \"25.05.14\", value: \"20회\" },\n+  { name: \"David\", date: \"25.05.13\", value: \"16회\" },\n+  { name: \"Elena\", date: \"25.05.12\", value: \"12회\" },\n+  { name: \"오하연\", date: \"25.05.11\", value: \"8회\" },\n+  { name: \"정혜진\", date: \"25.05.10\", value: \"6회\" },\n+];\n+\n+\n+\n+// ---------- ChartCard Renderer ----------\n+const renderBarChartCard = (item: typeof barChartMeta[number]) => (\n+  <ChartCard key={item.title}>\n+    <MetaSection>\n+      <Row>\n+        <Title>{item.title}</Title>\n+        <Value>{item.total.toLocaleString()}</Value>\n+      </Row>\n+      <Row>\n+        <Label>기간내</Label>\n+        <Label>{item.period}</Label>\n+      </Row>\n+      <Row>\n+        <Label>7일내</Label>\n+        <Label>{item.week}</Label>\n+      </Row>\n+    </MetaSection>\n+    <ChartContainer>\n+      <MyResponsiveBar data={item.data} />\n+    </ChartContainer>\n+  </ChartCard>\n+);\n+\n+const renderTopListCard = (title: string, items: { name: string; date: string; value: string }[]) => (\n+  <ChartCard key={title}>\n+    <Title>{title}</Title>\n+    <TopListWrapper>\n+      {items.map((item, i) => (\n+        <TopListItem key={i}>\n+          <ProfileSection>\n+            <ProfileImage src=\"/icon_user.png\" alt=\"user\" />\n+            <NameDateBox>\n+              <Name>{item.name}</Name>\n+              <DateText>{item.date}</DateText>\n+            </NameDateBox>\n+          </ProfileSection>\n+          <Price>{item.value}</Price>\n+        </TopListItem>\n+      ))}\n+    </TopListWrapper>\n+  </ChartCard>\n+);\n+\n+const renderVisitPieCard = () => {\n+  const data = visitMeta.accessUser;\n+  return (\n+    <ChartCard>\n+      <Title>방문유형 (PC · Mobile)</Title>\n+      <MetaSection>\n+        {[\"접속수별\", \"접속자별\"].map((label, idx) => {\n+          const key = idx === 0 ? \"accessCount\" : \"accessUser\";\n+          const row = visitMeta[key as \"accessCount\" | \"accessUser\"];\n+          const total = row.pc + row.mobile;\n+          return (\n+            <Row key={label}>\n+              <Label style={{ color: \"#324c8e\", minWidth: 80 }}>{label}</Label>\n+              <Value style={{ color: \"#324c8e\" }}>{row.pc}</Value>\n+              <Value style={{ color: \"#678b6c\" }}>{row.mobile}</Value>\n+              <Value>{total}</Value>\n+            </Row>\n+          );\n+        })}\n+      </MetaSection>\n+      <ChartContainer>\n+        <ResponsivePie\n+          data={[\n+            { id: \"PC\", label: \"PC\", value: visitMeta.accessUser.pc },\n+            { id: \"Mobile\", label: \"Mobile\", value: visitMeta.accessUser.mobile },\n+          ]}\n+          margin={{ top: 0, right: 10, bottom: 20, left: 10 }}\n+          innerRadius={0.6}\n+          padAngle={1}\n+          cornerRadius={3}\n+          enableArcLabels={false}\n+          enableArcLinkLabels={false}\n+          tooltip={() => null}\n+          colors={[\"#324c8e\", \"#678b6c\"]}\n+          layers={[\n+            \"arcs\",\n+            ({ centerX, centerY }) => (\n+              <>\n+                <text x={centerX} y={centerY - 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n+                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#324c8e\" }}>\n+                  PC: {visitMeta.accessUser.pc}\n+                </text>\n+                <text x={centerX} y={centerY + 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n+                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#678b6c\" }}>\n+                  Mobile: {visitMeta.accessUser.mobile}\n+                </text>\n+              </>\n+            ),\n+          ]}\n+        />\n+      </ChartContainer>\n+    </ChartCard>\n+  );\n+};\n+\n+// ---------- Main Page ----------\n+const CmsDashboardPage = () => {\n+  const [fromDate, setFromDate] = useState(dayjs().subtract(6, \"month\").format(\"YYYY-MM-DD\"));\n+  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n+  const [visitorView, setVisitorView] = useState(\"월간\");\n+\n+  const handleDateChangeInternal = (newFrom: string, newTo: string) => {\n+    setFromDate(newFrom);\n+    setToDate(newTo);\n+  };\n+\n+  const visitorData = [\n+    {\n+      id: \"방문자 수\",\n+      data: [\n+        { x: \"1\", y: 30 },\n+        { x: \"2\", y: 50 },\n+        { x: \"3\", y: 20 },\n+        { x: \"4\", y: 16 },\n+        { x: \"5\", y: 18 },\n+        { x: \"6\", y: 16 },\n+        { x: \"7\", y: 16 },\n+        { x: \"8\", y: 62 },\n+        { x: \"9\", y: 48 },\n+        { x: \"10\", y: 40 },\n+        { x: \"11\", y: 12 },\n+        { x: \"12\", y: 14 },\n+        { x: \"13\", y: 30 },\n+      ],\n+    },\n+  ];\n+\n+  return (\n+    <PageWrapper>\n+    <Container $themeMode=\"light\">\n+      <TopHeader>\n+        <h1>CMS 대시보드</h1>\n+      </TopHeader>\n+\n+      <ControlHeader>\n+        <GenericDateRangePicker\n+          initialFromDate={fromDate}\n+          initialToDate={toDate}\n+          onDateChange={handleDateChangeInternal}\n+          themeMode=\"light\"\n+        />\n+        <SearchButton $themeMode=\"light\">조회</SearchButton>\n+      </ControlHeader>\n+\n+      <DashboardWrapper>\n+        {/* 1행 */}\n+        {renderBarChartCard(barChartMeta[0])}\n+        <ChartCard>\n+\n+    <LineChartHeader>\n+    <Title>방문자 수(건)</Title>\n+    <Value>40</Value>\n+    <LineChartButtonGroup>\n+      {['주간', '월간', '연간'].map((label) => (\n+        <LineChartButton\n+          key={label}\n+          active={visitorView === label}\n+          onClick={() => setVisitorView(label)}>\n+          {label}\n+        </LineChartButton>\n+      ))}\n+    </LineChartButtonGroup>\n+  </LineChartHeader>\n+\n+  <ChartContainer>\n+    <ResponsiveLine\n+      data={visitorData}\n+      margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n+      xScale={{ type: \"point\" }}\n+      yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n+      axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n+      axisLeft={null}\n+      enableArea={false}\n+      colors={[\"#2f64cb\"]}\n+      lineWidth={2}\n+      pointSize={6}\n+      pointColor=\"#fff\"\n+      pointBorderWidth={2}\n+      pointBorderColor=\"#2f64cb\"\n+      useMesh\n+    />\n+  </ChartContainer>\n+</ChartCard>\n+        {renderVisitPieCard()}\n+\n+        {/* 2행 */}\n+        {renderBarChartCard(barChartMeta[3])}\n+        {renderTopListCard(\"견적 문의 대상 TOP 5\", dummyRequestTop5)}\n+        {renderBarChartCard(barChartMeta[2])}\n+\n+        {/* 3행 */}\n+        {renderBarChartCard(barChartMeta[4])}\n+        {renderTopListCard(\"견적 다운로드 TOP 5\", dummyDownloadTop5)}\n+        {renderTopListCard(\"자주 접속 TOP 5\", dummyAccessTop5)}\n+\n+\n+        {/* 마지막: AI 사용 현황 */}\n+        <LineChartCard>\n+          <LineChartHeader>\n+            <Title>AI 사용 현황</Title>\n+            <LineChartButtonGroup>\n+              <LineChartButton active>주간</LineChartButton>\n+              <LineChartButton>월간</LineChartButton>\n+              <LineChartButton>연간</LineChartButton>\n+            </LineChartButtonGroup>\n+          </LineChartHeader>\n+          <ChartContainer>\n+            <ResponsiveLine\n+              data={dummyLineData}\n+              margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n+              xScale={{ type: \"point\" }}\n+              yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n+              axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n+              axisLeft={null}\n+              enableArea\n+              areaOpacity={0.15}\n+              colors={[\"#2f64cb\"]}\n+              lineWidth={3}\n+              pointSize={6}\n+              pointColor=\"#2f64cb\"\n+              pointBorderWidth={2}\n+              pointBorderColor=\"#fff\"\n+              useMesh\n+            />\n+          </ChartContainer>\n+        </LineChartCard>\n+      </DashboardWrapper>\n+    </Container>\n+    </PageWrapper>\n+  );\n+};\n+\n+\n+\n+export default CmsDashboardPage;\n"
                },
                {
                    "date": 1747728025569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,22 +136,15 @@\n \n \n const TopHeader = styled.div`\n   display: flex;\n-  flex-direction: column;\n   justify-content: space-between;\n+  align-items: center;\n+  width: 100%;\n   margin-top: 20px;\n   margin-bottom: 20px;\n-  flex-wrap: wrap;\n-  gap: 20px;\n-\n-  @media (max-width: 1400px) {\n-    width: 1150px;\n-  }\n-\n-  @media (min-width: 2050px) {\n-    width: 1800px;\n-  }\n+  /* margin-bottom: 20px; */\n+  gap: 15px;\n `;\n \n const ControlHeader = styled(TopHeader)``;\n \n"
                },
                {
                    "date": 1747728035730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,8 @@\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   width: 100%;\n-  margin-top: 20px;\n   margin-bottom: 20px;\n   /* margin-bottom: 20px; */\n   gap: 15px;\n `;\n@@ -550,1659 +549,4 @@\n \n \n \n export default CmsDashboardPage;\n-\"use client\";\n-\n-import React, { useEffect, useState } from \"react\";\n-import styled from \"styled-components\";\n-import { ResponsivePie } from \"@nivo/pie\";\n-import { ResponsiveLine } from \"@nivo/line\";\n-import MyResponsiveBar from \"@/components/Chart/MyResponsiveBar\";\n-import { THEME_COLORS, ThemeMode } from \"@/styles/theme_colors\";\n-import GenericDateRangePicker from \"@/components/CustomList/GenericDateRangePicker\";\n-import dayjs from \"dayjs\";\n-\n-const PageWrapper = styled.div`\n-  width: 100%; // ✅ 수정: 부모(MainContent)의 너비를 그대로 따라감\n-  overflow-x: auto;\n-`;\n-\n-\n-\n-const LineChartHeader = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-  margin-bottom: 10px;\n-`;\n-\n-const LineChartButtonGroup = styled.div`\n-  display: flex;\n-  gap: 8px;\n-`;\n-\n-const LineChartButton = styled.button.withConfig({\n-  shouldForwardProp: (prop) => prop !== \"active\",\n-})<{ active?: boolean }>`\n-  padding: 8px 16px;\n-  font-size: 14px;\n-  font-weight: 500;\n-  border: 1px solid ${({ active }) => (active ? \"#2f64cb\" : \"#ccc\")};\n-  background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#eee\")};\n-  color: ${({ active }) => (active ? \"#fff\" : \"#666\")};\n-  border-radius: 4px;\n-  cursor: pointer;\n-\n-  &:hover {\n-    background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#ddd\")};\n-  }\n-`;\n-\n-\n-\n-const TopListWrapper = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  gap: 16px;\n-  margin-top: 16px;\n-`;\n-\n-const TopListItem = styled.div`\n-  display: flex;\n-  align-items: center;\n-  margin-top: 15px;\n-  height: 40px;\n-  \n-  justify-content: space-between;\n-`;\n-\n-const ProfileSection = styled.div`\n-  display: flex;\n-  align-items: center;\n-  gap: 12px;\n-  flex: 1;\n-`;\n-\n-const ProfileImage = styled.img`\n-  width: 40px;\n-  height: 40px;\n-  border-radius: 50%;\n-  object-fit: cover;\n-`;\n-\n-const NameDateBox = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-`;\n-\n-const Name = styled.div`\n-  font-size: 16px;\n-  color: #3e3e3e;\n-  font-weight: 500;\n-`;\n-\n-const DateText = styled.div`\n-  font-size: 14px;\n-  color: #808080;\n-`;\n-\n-const Price = styled.div`\n-  font-size: 16px;\n-  color: #3e3e3e;\n-  font-weight: 500;\n-  white-space: nowrap;\n-`;\n-\n-\n-const SearchButton = styled.button<{ $themeMode: ThemeMode }>`\n-  width: 60px;\n-  height: 40px;\n-  margin-left: 10px;\n-  background: ${({ $themeMode }) =>\n-    $themeMode === \"light\" ? THEME_COLORS.light.primary : THEME_COLORS.dark.buttonBackground};\n-  color: ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.buttonText : THEME_COLORS.dark.buttonText)};\n-  border: 1px solid\n-    ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.borderColor : THEME_COLORS.dark.borderColor)};\n-  border-left: none;\n-  border-radius: 0;\n-  font-weight: 500;\n-  font-size: 14px;\n-  cursor: pointer;\n-  transition: background-color 0.2s;\n-\n-  &:hover {\n-    opacity: 0.9;\n-  }\n-`;\n-\n-const Container = styled.div<{ $themeMode: ThemeMode }>`\n-  min-width: 1200px;\n-  width: 100%;\n-  padding: 30px;\n-  background-color: ${({ $themeMode }) =>\n-    $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n-  color: ${({ $themeMode }) =>\n-    $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n-  box-sizing: border-box;\n-`;\n-\n-\n-\n-const TopHeader = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-  width: 100%;\n-  margin-top: 20px;\n-  margin-bottom: 20px;\n-  /* margin-bottom: 20px; */\n-  gap: 15px;\n-`;\n-\n-const ControlHeader = styled(TopHeader)``;\n-\n-const visitMeta = {\n-  title: \"방문유형 (PC · Mobile)\",\n-  accessCount: { pc: 150, mobile: 40 },\n-  accessUser: { pc: 140, mobile: 25 },\n-};\n-\n-const labels = [\"7일전\", \"6일전\", \"5일전\", \"4일전\", \"3일전\", \"2일전\", \"기준일\"];\n-\n-const dummyLineData = [\n-  {\n-    id: \"AI 사용량\",\n-    data: [\n-      { x: \"2025.05.07\", y: 3 },\n-      { x: \"2025.05.08\", y: 4 },\n-      { x: \"2025.05.09\", y: 7 },\n-      { x: \"2025.05.10\", y: 7 },\n-      { x: \"2025.05.11\", y: 10 },\n-      { x: \"2025.05.12\", y: 11 },\n-      { x: \"2025.05.13\", y: 14 },\n-    ],\n-  },\n-];\n-\n-const barChartMeta = [\n-  {\n-    title: \"누적 가입 고객수(명)\",\n-    total: 1234,\n-    period: 41,\n-    week: 41,\n-    counts: [8, 5, 3, 3, 10, 10, 2],\n-  },\n-  {\n-    title: \"견적 다운로드(건)\",\n-    total: 200,\n-    period: 40,\n-    week: 40,\n-    counts: [5, 3, 4, 6, 7, 10, 5],\n-  },\n-  {\n-    title: \"AI 답변 확인 필요(건)\",\n-    total: 87,\n-    period: 29,\n-    week: 29,\n-    counts: [4, 4, 5, 5, 4, 4, 3],\n-  },\n-  {\n-    title: \"견적 문의 요청(건)\",\n-    total: 100,\n-    period: 40,\n-    week: 40,\n-    counts: [3, 3, 4, 6, 8, 10, 6],\n-  },\n-  {\n-    title: \"견적 PDF 다운로드(건)\",\n-    total: 88,\n-    period: 39,\n-    week: 39,\n-    counts: [8, 5, 3, 3, 10, 10, 2],\n-  },\n-].map((item) => ({\n-  ...item,\n-  data: labels.map((label, i) => ({\n-    label,\n-    count: item.counts[i],\n-  })),\n-}));\n-\n-const DashboardWrapper = styled.div`\n-  display: flex;\n-  flex-wrap: wrap;\n-  gap: 16px;\n-  width: 100%;\n-  box-sizing: border-box;\n-`;\n-\n-\n-\n-\n-const ChartCard = styled.div`\n-  background: #fff;\n-  border: 1px solid #dbdfea;\n-  border-radius: 8px;\n-  flex: 1 1 calc((100% - 32px) / 3); // gap 16px × 2\n-  min-width: 360px;\n-  height: 430px;\n-  padding: 20px;\n-  box-sizing: border-box;\n-  display: flex;\n-  flex-direction: column;\n-`;\n-\n-\n-\n-const LineChartCard = styled(ChartCard)`\n-  width: 100%;\n-  grid-column: 1 / -1;\n-`;\n-\n-const MetaSection = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  gap: 10px;\n-  margin-bottom: 20px;\n-`;\n-\n-const Row = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-`;\n-\n-const ChartContainer = styled.div`\n-  height: 280px;\n-`;\n-\n-const Title = styled.div`\n-  font-size: 15px;\n-  font-weight: 700;\n-  color: #000;\n-`;\n-\n-const Value = styled.div`\n-  font-size: 15px;\n-  font-weight: 700;\n-  color: #000;\n-`;\n-\n-const Label = styled.div`\n-  font-size: 13px;\n-  color: #999;\n-`;\n-\n-interface TopItem {\n-  name: string;\n-  date: string;\n-  value: string; // 금액 또는 횟수\n-}\n-\n-\n-const dummyRequestTop5: TopItem[] = [\n-  { name: \"IoT 앱\", date: \"2시간 전\", value: \"30,000,000원\" },\n-  { name: \"식음료\", date: \"한달 전\", value: \"40,600,000원\" },\n-  { name: \"AI\", date: \"25.03.14\", value: \"90,000,000원\" },\n-  { name: \"전산\", date: \"25.02.13\", value: \"80,500,000원\" },\n-  { name: \"IoT 앱\", date: \"25.01.12\", value: \"30,000,000원\" },\n-];\n-\n-const dummyDownloadTop5: TopItem[] = [\n-  { name: \"보안시스템\", date: \"방금 전\", value: \"25,000,000원\" },\n-  { name: \"의료기기\", date: \"1시간 전\", value: \"50,000,000원\" },\n-  { name: \"스마트홈\", date: \"25.03.11\", value: \"15,000,000원\" },\n-  { name: \"에너지관리\", date: \"25.02.25\", value: \"12,300,000원\" },\n-  { name: \"AI 분석\", date: \"25.02.01\", value: \"32,000,000원\" },\n-];\n-\n-const dummyAccessTop5: TopItem[] = [\n-  { name: \"Lucas\", date: \"25.05.14\", value: \"20회\" },\n-  { name: \"David\", date: \"25.05.13\", value: \"16회\" },\n-  { name: \"Elena\", date: \"25.05.12\", value: \"12회\" },\n-  { name: \"오하연\", date: \"25.05.11\", value: \"8회\" },\n-  { name: \"정혜진\", date: \"25.05.10\", value: \"6회\" },\n-];\n-\n-\n-\n-// ---------- ChartCard Renderer ----------\n-const renderBarChartCard = (item: typeof barChartMeta[number]) => (\n-  <ChartCard key={item.title}>\n-    <MetaSection>\n-      <Row>\n-        <Title>{item.title}</Title>\n-        <Value>{item.total.toLocaleString()}</Value>\n-      </Row>\n-      <Row>\n-        <Label>기간내</Label>\n-        <Label>{item.period}</Label>\n-      </Row>\n-      <Row>\n-        <Label>7일내</Label>\n-        <Label>{item.week}</Label>\n-      </Row>\n-    </MetaSection>\n-    <ChartContainer>\n-      <MyResponsiveBar data={item.data} />\n-    </ChartContainer>\n-  </ChartCard>\n-);\n-\n-const renderTopListCard = (title: string, items: { name: string; date: string; value: string }[]) => (\n-  <ChartCard key={title}>\n-    <Title>{title}</Title>\n-    <TopListWrapper>\n-      {items.map((item, i) => (\n-        <TopListItem key={i}>\n-          <ProfileSection>\n-            <ProfileImage src=\"/icon_user.png\" alt=\"user\" />\n-            <NameDateBox>\n-              <Name>{item.name}</Name>\n-              <DateText>{item.date}</DateText>\n-            </NameDateBox>\n-          </ProfileSection>\n-          <Price>{item.value}</Price>\n-        </TopListItem>\n-      ))}\n-    </TopListWrapper>\n-  </ChartCard>\n-);\n-\n-const renderVisitPieCard = () => {\n-  const data = visitMeta.accessUser;\n-  return (\n-    <ChartCard>\n-      <Title>방문유형 (PC · Mobile)</Title>\n-      <MetaSection>\n-        {[\"접속수별\", \"접속자별\"].map((label, idx) => {\n-          const key = idx === 0 ? \"accessCount\" : \"accessUser\";\n-          const row = visitMeta[key as \"accessCount\" | \"accessUser\"];\n-          const total = row.pc + row.mobile;\n-          return (\n-            <Row key={label}>\n-              <Label style={{ color: \"#324c8e\", minWidth: 80 }}>{label}</Label>\n-              <Value style={{ color: \"#324c8e\" }}>{row.pc}</Value>\n-              <Value style={{ color: \"#678b6c\" }}>{row.mobile}</Value>\n-              <Value>{total}</Value>\n-            </Row>\n-          );\n-        })}\n-      </MetaSection>\n-      <ChartContainer>\n-        <ResponsivePie\n-          data={[\n-            { id: \"PC\", label: \"PC\", value: visitMeta.accessUser.pc },\n-            { id: \"Mobile\", label: \"Mobile\", value: visitMeta.accessUser.mobile },\n-          ]}\n-          margin={{ top: 0, right: 10, bottom: 20, left: 10 }}\n-          innerRadius={0.6}\n-          padAngle={1}\n-          cornerRadius={3}\n-          enableArcLabels={false}\n-          enableArcLinkLabels={false}\n-          tooltip={() => null}\n-          colors={[\"#324c8e\", \"#678b6c\"]}\n-          layers={[\n-            \"arcs\",\n-            ({ centerX, centerY }) => (\n-              <>\n-                <text x={centerX} y={centerY - 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n-                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#324c8e\" }}>\n-                  PC: {visitMeta.accessUser.pc}\n-                </text>\n-                <text x={centerX} y={centerY + 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n-                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#678b6c\" }}>\n-                  Mobile: {visitMeta.accessUser.mobile}\n-                </text>\n-              </>\n-            ),\n-          ]}\n-        />\n-      </ChartContainer>\n-    </ChartCard>\n-  );\n-};\n-\n-// ---------- Main Page ----------\n-const CmsDashboardPage = () => {\n-  const [fromDate, setFromDate] = useState(dayjs().subtract(6, \"month\").format(\"YYYY-MM-DD\"));\n-  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n-  const [visitorView, setVisitorView] = useState(\"월간\");\n-\n-  const handleDateChangeInternal = (newFrom: string, newTo: string) => {\n-    setFromDate(newFrom);\n-    setToDate(newTo);\n-  };\n-\n-  const visitorData = [\n-    {\n-      id: \"방문자 수\",\n-      data: [\n-        { x: \"1\", y: 30 },\n-        { x: \"2\", y: 50 },\n-        { x: \"3\", y: 20 },\n-        { x: \"4\", y: 16 },\n-        { x: \"5\", y: 18 },\n-        { x: \"6\", y: 16 },\n-        { x: \"7\", y: 16 },\n-        { x: \"8\", y: 62 },\n-        { x: \"9\", y: 48 },\n-        { x: \"10\", y: 40 },\n-        { x: \"11\", y: 12 },\n-        { x: \"12\", y: 14 },\n-        { x: \"13\", y: 30 },\n-      ],\n-    },\n-  ];\n-\n-  return (\n-    <PageWrapper>\n-    <Container $themeMode=\"light\">\n-      <TopHeader>\n-        <h1>CMS 대시보드</h1>\n-      </TopHeader>\n-\n-      <ControlHeader>\n-        <GenericDateRangePicker\n-          initialFromDate={fromDate}\n-          initialToDate={toDate}\n-          onDateChange={handleDateChangeInternal}\n-          themeMode=\"light\"\n-        />\n-        <SearchButton $themeMode=\"light\">조회</SearchButton>\n-      </ControlHeader>\n-\n-      <DashboardWrapper>\n-        {/* 1행 */}\n-        {renderBarChartCard(barChartMeta[0])}\n-        <ChartCard>\n-\n-    <LineChartHeader>\n-    <Title>방문자 수(건)</Title>\n-    <Value>40</Value>\n-    <LineChartButtonGroup>\n-      {['주간', '월간', '연간'].map((label) => (\n-        <LineChartButton\n-          key={label}\n-          active={visitorView === label}\n-          onClick={() => setVisitorView(label)}>\n-          {label}\n-        </LineChartButton>\n-      ))}\n-    </LineChartButtonGroup>\n-  </LineChartHeader>\n-\n-  <ChartContainer>\n-    <ResponsiveLine\n-      data={visitorData}\n-      margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n-      xScale={{ type: \"point\" }}\n-      yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n-      axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n-      axisLeft={null}\n-      enableArea={false}\n-      colors={[\"#2f64cb\"]}\n-      lineWidth={2}\n-      pointSize={6}\n-      pointColor=\"#fff\"\n-      pointBorderWidth={2}\n-      pointBorderColor=\"#2f64cb\"\n-      useMesh\n-    />\n-  </ChartContainer>\n-</ChartCard>\n-        {renderVisitPieCard()}\n-\n-        {/* 2행 */}\n-        {renderBarChartCard(barChartMeta[3])}\n-        {renderTopListCard(\"견적 문의 대상 TOP 5\", dummyRequestTop5)}\n-        {renderBarChartCard(barChartMeta[2])}\n-\n-        {/* 3행 */}\n-        {renderBarChartCard(barChartMeta[4])}\n-        {renderTopListCard(\"견적 다운로드 TOP 5\", dummyDownloadTop5)}\n-        {renderTopListCard(\"자주 접속 TOP 5\", dummyAccessTop5)}\n-\n-\n-        {/* 마지막: AI 사용 현황 */}\n-        <LineChartCard>\n-          <LineChartHeader>\n-            <Title>AI 사용 현황</Title>\n-            <LineChartButtonGroup>\n-              <LineChartButton active>주간</LineChartButton>\n-              <LineChartButton>월간</LineChartButton>\n-              <LineChartButton>연간</LineChartButton>\n-            </LineChartButtonGroup>\n-          </LineChartHeader>\n-          <ChartContainer>\n-            <ResponsiveLine\n-              data={dummyLineData}\n-              margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n-              xScale={{ type: \"point\" }}\n-              yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n-              axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n-              axisLeft={null}\n-              enableArea\n-              areaOpacity={0.15}\n-              colors={[\"#2f64cb\"]}\n-              lineWidth={3}\n-              pointSize={6}\n-              pointColor=\"#2f64cb\"\n-              pointBorderWidth={2}\n-              pointBorderColor=\"#fff\"\n-              useMesh\n-            />\n-          </ChartContainer>\n-        </LineChartCard>\n-      </DashboardWrapper>\n-    </Container>\n-    </PageWrapper>\n-  );\n-};\n-\n-\n-\n-export default CmsDashboardPage;\n-\"use client\";\n-\n-import React, { useEffect, useState } from \"react\";\n-import styled from \"styled-components\";\n-import { ResponsivePie } from \"@nivo/pie\";\n-import { ResponsiveLine } from \"@nivo/line\";\n-import MyResponsiveBar from \"@/components/Chart/MyResponsiveBar\";\n-import { THEME_COLORS, ThemeMode } from \"@/styles/theme_colors\";\n-import GenericDateRangePicker from \"@/components/CustomList/GenericDateRangePicker\";\n-import dayjs from \"dayjs\";\n-\n-const PageWrapper = styled.div`\n-  width: 100%; // ✅ 수정: 부모(MainContent)의 너비를 그대로 따라감\n-  overflow-x: auto;\n-`;\n-\n-\n-\n-const LineChartHeader = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-  margin-bottom: 10px;\n-`;\n-\n-const LineChartButtonGroup = styled.div`\n-  display: flex;\n-  gap: 8px;\n-`;\n-\n-const LineChartButton = styled.button.withConfig({\n-  shouldForwardProp: (prop) => prop !== \"active\",\n-})<{ active?: boolean }>`\n-  padding: 8px 16px;\n-  font-size: 14px;\n-  font-weight: 500;\n-  border: 1px solid ${({ active }) => (active ? \"#2f64cb\" : \"#ccc\")};\n-  background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#eee\")};\n-  color: ${({ active }) => (active ? \"#fff\" : \"#666\")};\n-  border-radius: 4px;\n-  cursor: pointer;\n-\n-  &:hover {\n-    background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#ddd\")};\n-  }\n-`;\n-\n-\n-\n-const TopListWrapper = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  gap: 16px;\n-  margin-top: 16px;\n-`;\n-\n-const TopListItem = styled.div`\n-  display: flex;\n-  align-items: center;\n-  margin-top: 15px;\n-  height: 40px;\n-  \n-  justify-content: space-between;\n-`;\n-\n-const ProfileSection = styled.div`\n-  display: flex;\n-  align-items: center;\n-  gap: 12px;\n-  flex: 1;\n-`;\n-\n-const ProfileImage = styled.img`\n-  width: 40px;\n-  height: 40px;\n-  border-radius: 50%;\n-  object-fit: cover;\n-`;\n-\n-const NameDateBox = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-`;\n-\n-const Name = styled.div`\n-  font-size: 16px;\n-  color: #3e3e3e;\n-  font-weight: 500;\n-`;\n-\n-const DateText = styled.div`\n-  font-size: 14px;\n-  color: #808080;\n-`;\n-\n-const Price = styled.div`\n-  font-size: 16px;\n-  color: #3e3e3e;\n-  font-weight: 500;\n-  white-space: nowrap;\n-`;\n-\n-\n-const SearchButton = styled.button<{ $themeMode: ThemeMode }>`\n-  width: 60px;\n-  height: 40px;\n-  margin-left: 10px;\n-  background: ${({ $themeMode }) =>\n-    $themeMode === \"light\" ? THEME_COLORS.light.primary : THEME_COLORS.dark.buttonBackground};\n-  color: ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.buttonText : THEME_COLORS.dark.buttonText)};\n-  border: 1px solid\n-    ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.borderColor : THEME_COLORS.dark.borderColor)};\n-  border-left: none;\n-  border-radius: 0;\n-  font-weight: 500;\n-  font-size: 14px;\n-  cursor: pointer;\n-  transition: background-color 0.2s;\n-\n-  &:hover {\n-    opacity: 0.9;\n-  }\n-`;\n-\n-const Container = styled.div<{ $themeMode: ThemeMode }>`\n-  min-width: 1200px;\n-  width: 100%;\n-  padding: 30px;\n-  background-color: ${({ $themeMode }) =>\n-    $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n-  color: ${({ $themeMode }) =>\n-    $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n-  box-sizing: border-box;\n-`;\n-\n-\n-\n-const TopHeader = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-  width: 100%;\n-  /* margin-bottom: 20px; */\n-  gap: 15px;\n-`;\n-\n-const ControlHeader = styled(TopHeader)``;\n-\n-const visitMeta = {\n-  title: \"방문유형 (PC · Mobile)\",\n-  accessCount: { pc: 150, mobile: 40 },\n-  accessUser: { pc: 140, mobile: 25 },\n-};\n-\n-const labels = [\"7일전\", \"6일전\", \"5일전\", \"4일전\", \"3일전\", \"2일전\", \"기준일\"];\n-\n-const dummyLineData = [\n-  {\n-    id: \"AI 사용량\",\n-    data: [\n-      { x: \"2025.05.07\", y: 3 },\n-      { x: \"2025.05.08\", y: 4 },\n-      { x: \"2025.05.09\", y: 7 },\n-      { x: \"2025.05.10\", y: 7 },\n-      { x: \"2025.05.11\", y: 10 },\n-      { x: \"2025.05.12\", y: 11 },\n-      { x: \"2025.05.13\", y: 14 },\n-    ],\n-  },\n-];\n-\n-const barChartMeta = [\n-  {\n-    title: \"누적 가입 고객수(명)\",\n-    total: 1234,\n-    period: 41,\n-    week: 41,\n-    counts: [8, 5, 3, 3, 10, 10, 2],\n-  },\n-  {\n-    title: \"견적 다운로드(건)\",\n-    total: 200,\n-    period: 40,\n-    week: 40,\n-    counts: [5, 3, 4, 6, 7, 10, 5],\n-  },\n-  {\n-    title: \"AI 답변 확인 필요(건)\",\n-    total: 87,\n-    period: 29,\n-    week: 29,\n-    counts: [4, 4, 5, 5, 4, 4, 3],\n-  },\n-  {\n-    title: \"견적 문의 요청(건)\",\n-    total: 100,\n-    period: 40,\n-    week: 40,\n-    counts: [3, 3, 4, 6, 8, 10, 6],\n-  },\n-  {\n-    title: \"견적 PDF 다운로드(건)\",\n-    total: 88,\n-    period: 39,\n-    week: 39,\n-    counts: [8, 5, 3, 3, 10, 10, 2],\n-  },\n-].map((item) => ({\n-  ...item,\n-  data: labels.map((label, i) => ({\n-    label,\n-    count: item.counts[i],\n-  })),\n-}));\n-\n-const DashboardWrapper = styled.div`\n-  display: flex;\n-  flex-wrap: wrap;\n-  gap: 16px;\n-  width: 100%;\n-  box-sizing: border-box;\n-`;\n-\n-\n-\n-\n-const ChartCard = styled.div`\n-  background: #fff;\n-  border: 1px solid #dbdfea;\n-  border-radius: 8px;\n-  flex: 1 1 calc((100% - 32px) / 3); // gap 16px × 2\n-  min-width: 360px;\n-  height: 430px;\n-  padding: 20px;\n-  box-sizing: border-box;\n-  display: flex;\n-  flex-direction: column;\n-`;\n-\n-\n-\n-const LineChartCard = styled(ChartCard)`\n-  width: 100%;\n-  grid-column: 1 / -1;\n-`;\n-\n-const MetaSection = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  gap: 10px;\n-  margin-bottom: 20px;\n-`;\n-\n-const Row = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-`;\n-\n-const ChartContainer = styled.div`\n-  height: 280px;\n-`;\n-\n-const Title = styled.div`\n-  font-size: 15px;\n-  font-weight: 700;\n-  color: #000;\n-`;\n-\n-const Value = styled.div`\n-  font-size: 15px;\n-  font-weight: 700;\n-  color: #000;\n-`;\n-\n-const Label = styled.div`\n-  font-size: 13px;\n-  color: #999;\n-`;\n-\n-interface TopItem {\n-  name: string;\n-  date: string;\n-  value: string; // 금액 또는 횟수\n-}\n-\n-\n-const dummyRequestTop5: TopItem[] = [\n-  { name: \"IoT 앱\", date: \"2시간 전\", value: \"30,000,000원\" },\n-  { name: \"식음료\", date: \"한달 전\", value: \"40,600,000원\" },\n-  { name: \"AI\", date: \"25.03.14\", value: \"90,000,000원\" },\n-  { name: \"전산\", date: \"25.02.13\", value: \"80,500,000원\" },\n-  { name: \"IoT 앱\", date: \"25.01.12\", value: \"30,000,000원\" },\n-];\n-\n-const dummyDownloadTop5: TopItem[] = [\n-  { name: \"보안시스템\", date: \"방금 전\", value: \"25,000,000원\" },\n-  { name: \"의료기기\", date: \"1시간 전\", value: \"50,000,000원\" },\n-  { name: \"스마트홈\", date: \"25.03.11\", value: \"15,000,000원\" },\n-  { name: \"에너지관리\", date: \"25.02.25\", value: \"12,300,000원\" },\n-  { name: \"AI 분석\", date: \"25.02.01\", value: \"32,000,000원\" },\n-];\n-\n-const dummyAccessTop5: TopItem[] = [\n-  { name: \"Lucas\", date: \"25.05.14\", value: \"20회\" },\n-  { name: \"David\", date: \"25.05.13\", value: \"16회\" },\n-  { name: \"Elena\", date: \"25.05.12\", value: \"12회\" },\n-  { name: \"오하연\", date: \"25.05.11\", value: \"8회\" },\n-  { name: \"정혜진\", date: \"25.05.10\", value: \"6회\" },\n-];\n-\n-\n-\n-// ---------- ChartCard Renderer ----------\n-const renderBarChartCard = (item: typeof barChartMeta[number]) => (\n-  <ChartCard key={item.title}>\n-    <MetaSection>\n-      <Row>\n-        <Title>{item.title}</Title>\n-        <Value>{item.total.toLocaleString()}</Value>\n-      </Row>\n-      <Row>\n-        <Label>기간내</Label>\n-        <Label>{item.period}</Label>\n-      </Row>\n-      <Row>\n-        <Label>7일내</Label>\n-        <Label>{item.week}</Label>\n-      </Row>\n-    </MetaSection>\n-    <ChartContainer>\n-      <MyResponsiveBar data={item.data} />\n-    </ChartContainer>\n-  </ChartCard>\n-);\n-\n-const renderTopListCard = (title: string, items: { name: string; date: string; value: string }[]) => (\n-  <ChartCard key={title}>\n-    <Title>{title}</Title>\n-    <TopListWrapper>\n-      {items.map((item, i) => (\n-        <TopListItem key={i}>\n-          <ProfileSection>\n-            <ProfileImage src=\"/icon_user.png\" alt=\"user\" />\n-            <NameDateBox>\n-              <Name>{item.name}</Name>\n-              <DateText>{item.date}</DateText>\n-            </NameDateBox>\n-          </ProfileSection>\n-          <Price>{item.value}</Price>\n-        </TopListItem>\n-      ))}\n-    </TopListWrapper>\n-  </ChartCard>\n-);\n-\n-const renderVisitPieCard = () => {\n-  const data = visitMeta.accessUser;\n-  return (\n-    <ChartCard>\n-      <Title>방문유형 (PC · Mobile)</Title>\n-      <MetaSection>\n-        {[\"접속수별\", \"접속자별\"].map((label, idx) => {\n-          const key = idx === 0 ? \"accessCount\" : \"accessUser\";\n-          const row = visitMeta[key as \"accessCount\" | \"accessUser\"];\n-          const total = row.pc + row.mobile;\n-          return (\n-            <Row key={label}>\n-              <Label style={{ color: \"#324c8e\", minWidth: 80 }}>{label}</Label>\n-              <Value style={{ color: \"#324c8e\" }}>{row.pc}</Value>\n-              <Value style={{ color: \"#678b6c\" }}>{row.mobile}</Value>\n-              <Value>{total}</Value>\n-            </Row>\n-          );\n-        })}\n-      </MetaSection>\n-      <ChartContainer>\n-        <ResponsivePie\n-          data={[\n-            { id: \"PC\", label: \"PC\", value: visitMeta.accessUser.pc },\n-            { id: \"Mobile\", label: \"Mobile\", value: visitMeta.accessUser.mobile },\n-          ]}\n-          margin={{ top: 0, right: 10, bottom: 20, left: 10 }}\n-          innerRadius={0.6}\n-          padAngle={1}\n-          cornerRadius={3}\n-          enableArcLabels={false}\n-          enableArcLinkLabels={false}\n-          tooltip={() => null}\n-          colors={[\"#324c8e\", \"#678b6c\"]}\n-          layers={[\n-            \"arcs\",\n-            ({ centerX, centerY }) => (\n-              <>\n-                <text x={centerX} y={centerY - 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n-                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#324c8e\" }}>\n-                  PC: {visitMeta.accessUser.pc}\n-                </text>\n-                <text x={centerX} y={centerY + 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n-                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#678b6c\" }}>\n-                  Mobile: {visitMeta.accessUser.mobile}\n-                </text>\n-              </>\n-            ),\n-          ]}\n-        />\n-      </ChartContainer>\n-    </ChartCard>\n-  );\n-};\n-\n-// ---------- Main Page ----------\n-const CmsDashboardPage = () => {\n-  const [fromDate, setFromDate] = useState(dayjs().subtract(6, \"month\").format(\"YYYY-MM-DD\"));\n-  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n-  const [visitorView, setVisitorView] = useState(\"월간\");\n-\n-  const handleDateChangeInternal = (newFrom: string, newTo: string) => {\n-    setFromDate(newFrom);\n-    setToDate(newTo);\n-  };\n-\n-  const visitorData = [\n-    {\n-      id: \"방문자 수\",\n-      data: [\n-        { x: \"1\", y: 30 },\n-        { x: \"2\", y: 50 },\n-        { x: \"3\", y: 20 },\n-        { x: \"4\", y: 16 },\n-        { x: \"5\", y: 18 },\n-        { x: \"6\", y: 16 },\n-        { x: \"7\", y: 16 },\n-        { x: \"8\", y: 62 },\n-        { x: \"9\", y: 48 },\n-        { x: \"10\", y: 40 },\n-        { x: \"11\", y: 12 },\n-        { x: \"12\", y: 14 },\n-        { x: \"13\", y: 30 },\n-      ],\n-    },\n-  ];\n-\n-  return (\n-    <PageWrapper>\n-    <Container $themeMode=\"light\">\n-      <TopHeader>\n-        <h1>CMS 대시보드</h1>\n-      </TopHeader>\n-\n-      <ControlHeader>\n-        <GenericDateRangePicker\n-          initialFromDate={fromDate}\n-          initialToDate={toDate}\n-          onDateChange={handleDateChangeInternal}\n-          themeMode=\"light\"\n-        />\n-        <SearchButton $themeMode=\"light\">조회</SearchButton>\n-      </ControlHeader>\n-\n-      <DashboardWrapper>\n-        {/* 1행 */}\n-        {renderBarChartCard(barChartMeta[0])}\n-        <ChartCard>\n-\n-    <LineChartHeader>\n-    <Title>방문자 수(건)</Title>\n-    <Value>40</Value>\n-    <LineChartButtonGroup>\n-      {['주간', '월간', '연간'].map((label) => (\n-        <LineChartButton\n-          key={label}\n-          active={visitorView === label}\n-          onClick={() => setVisitorView(label)}>\n-          {label}\n-        </LineChartButton>\n-      ))}\n-    </LineChartButtonGroup>\n-  </LineChartHeader>\n-\n-  <ChartContainer>\n-    <ResponsiveLine\n-      data={visitorData}\n-      margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n-      xScale={{ type: \"point\" }}\n-      yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n-      axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n-      axisLeft={null}\n-      enableArea={false}\n-      colors={[\"#2f64cb\"]}\n-      lineWidth={2}\n-      pointSize={6}\n-      pointColor=\"#fff\"\n-      pointBorderWidth={2}\n-      pointBorderColor=\"#2f64cb\"\n-      useMesh\n-    />\n-  </ChartContainer>\n-</ChartCard>\n-        {renderVisitPieCard()}\n-\n-        {/* 2행 */}\n-        {renderBarChartCard(barChartMeta[3])}\n-        {renderTopListCard(\"견적 문의 대상 TOP 5\", dummyRequestTop5)}\n-        {renderBarChartCard(barChartMeta[2])}\n-\n-        {/* 3행 */}\n-        {renderBarChartCard(barChartMeta[4])}\n-        {renderTopListCard(\"견적 다운로드 TOP 5\", dummyDownloadTop5)}\n-        {renderTopListCard(\"자주 접속 TOP 5\", dummyAccessTop5)}\n-\n-\n-        {/* 마지막: AI 사용 현황 */}\n-        <LineChartCard>\n-          <LineChartHeader>\n-            <Title>AI 사용 현황</Title>\n-            <LineChartButtonGroup>\n-              <LineChartButton active>주간</LineChartButton>\n-              <LineChartButton>월간</LineChartButton>\n-              <LineChartButton>연간</LineChartButton>\n-            </LineChartButtonGroup>\n-          </LineChartHeader>\n-          <ChartContainer>\n-            <ResponsiveLine\n-              data={dummyLineData}\n-              margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n-              xScale={{ type: \"point\" }}\n-              yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n-              axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n-              axisLeft={null}\n-              enableArea\n-              areaOpacity={0.15}\n-              colors={[\"#2f64cb\"]}\n-              lineWidth={3}\n-              pointSize={6}\n-              pointColor=\"#2f64cb\"\n-              pointBorderWidth={2}\n-              pointBorderColor=\"#fff\"\n-              useMesh\n-            />\n-          </ChartContainer>\n-        </LineChartCard>\n-      </DashboardWrapper>\n-    </Container>\n-    </PageWrapper>\n-  );\n-};\n-\n-\n-\n-export default CmsDashboardPage;\n-\"use client\";\n-\n-import React, { useEffect, useState } from \"react\";\n-import styled from \"styled-components\";\n-import { ResponsivePie } from \"@nivo/pie\";\n-import { ResponsiveLine } from \"@nivo/line\";\n-import MyResponsiveBar from \"@/components/Chart/MyResponsiveBar\";\n-import { THEME_COLORS, ThemeMode } from \"@/styles/theme_colors\";\n-import GenericDateRangePicker from \"@/components/CustomList/GenericDateRangePicker\";\n-import dayjs from \"dayjs\";\n-\n-const PageWrapper = styled.div`\n-  width: 100%; // ✅ 수정: 부모(MainContent)의 너비를 그대로 따라감\n-  overflow-x: auto;\n-`;\n-\n-\n-\n-const LineChartHeader = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-  margin-bottom: 10px;\n-`;\n-\n-const LineChartButtonGroup = styled.div`\n-  display: flex;\n-  gap: 8px;\n-`;\n-\n-const LineChartButton = styled.button.withConfig({\n-  shouldForwardProp: (prop) => prop !== \"active\",\n-})<{ active?: boolean }>`\n-  padding: 8px 16px;\n-  font-size: 14px;\n-  font-weight: 500;\n-  border: 1px solid ${({ active }) => (active ? \"#2f64cb\" : \"#ccc\")};\n-  background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#eee\")};\n-  color: ${({ active }) => (active ? \"#fff\" : \"#666\")};\n-  border-radius: 4px;\n-  cursor: pointer;\n-\n-  &:hover {\n-    background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#ddd\")};\n-  }\n-`;\n-\n-\n-\n-const TopListWrapper = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  gap: 16px;\n-  margin-top: 16px;\n-`;\n-\n-const TopListItem = styled.div`\n-  display: flex;\n-  align-items: center;\n-  margin-top: 15px;\n-  height: 40px;\n-  \n-  justify-content: space-between;\n-`;\n-\n-const ProfileSection = styled.div`\n-  display: flex;\n-  align-items: center;\n-  gap: 12px;\n-  flex: 1;\n-`;\n-\n-const ProfileImage = styled.img`\n-  width: 40px;\n-  height: 40px;\n-  border-radius: 50%;\n-  object-fit: cover;\n-`;\n-\n-const NameDateBox = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-`;\n-\n-const Name = styled.div`\n-  font-size: 16px;\n-  color: #3e3e3e;\n-  font-weight: 500;\n-`;\n-\n-const DateText = styled.div`\n-  font-size: 14px;\n-  color: #808080;\n-`;\n-\n-const Price = styled.div`\n-  font-size: 16px;\n-  color: #3e3e3e;\n-  font-weight: 500;\n-  white-space: nowrap;\n-`;\n-\n-\n-const SearchButton = styled.button<{ $themeMode: ThemeMode }>`\n-  width: 60px;\n-  height: 40px;\n-  margin-left: 10px;\n-  background: ${({ $themeMode }) =>\n-    $themeMode === \"light\" ? THEME_COLORS.light.primary : THEME_COLORS.dark.buttonBackground};\n-  color: ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.buttonText : THEME_COLORS.dark.buttonText)};\n-  border: 1px solid\n-    ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.borderColor : THEME_COLORS.dark.borderColor)};\n-  border-left: none;\n-  border-radius: 0;\n-  font-weight: 500;\n-  font-size: 14px;\n-  cursor: pointer;\n-  transition: background-color 0.2s;\n-\n-  &:hover {\n-    opacity: 0.9;\n-  }\n-`;\n-\n-const Container = styled.div<{ $themeMode: ThemeMode }>`\n-  min-width: 1200px;\n-  width: 100%;\n-  /* padding: 30px 40px; */\n-  background-color: ${({ $themeMode }) =>\n-    $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n-  color: ${({ $themeMode }) =>\n-    $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n-  box-sizing: border-box;\n-`;\n-\n-\n-\n-const TopHeader = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-  width: 100%;\n-  /* margin-bottom: 20px; */\n-  gap: 15px;\n-`;\n-\n-const ControlHeader = styled(TopHeader)``;\n-\n-const visitMeta = {\n-  title: \"방문유형 (PC · Mobile)\",\n-  accessCount: { pc: 150, mobile: 40 },\n-  accessUser: { pc: 140, mobile: 25 },\n-};\n-\n-const labels = [\"7일전\", \"6일전\", \"5일전\", \"4일전\", \"3일전\", \"2일전\", \"기준일\"];\n-\n-const dummyLineData = [\n-  {\n-    id: \"AI 사용량\",\n-    data: [\n-      { x: \"2025.05.07\", y: 3 },\n-      { x: \"2025.05.08\", y: 4 },\n-      { x: \"2025.05.09\", y: 7 },\n-      { x: \"2025.05.10\", y: 7 },\n-      { x: \"2025.05.11\", y: 10 },\n-      { x: \"2025.05.12\", y: 11 },\n-      { x: \"2025.05.13\", y: 14 },\n-    ],\n-  },\n-];\n-\n-const barChartMeta = [\n-  {\n-    title: \"누적 가입 고객수(명)\",\n-    total: 1234,\n-    period: 41,\n-    week: 41,\n-    counts: [8, 5, 3, 3, 10, 10, 2],\n-  },\n-  {\n-    title: \"견적 다운로드(건)\",\n-    total: 200,\n-    period: 40,\n-    week: 40,\n-    counts: [5, 3, 4, 6, 7, 10, 5],\n-  },\n-  {\n-    title: \"AI 답변 확인 필요(건)\",\n-    total: 87,\n-    period: 29,\n-    week: 29,\n-    counts: [4, 4, 5, 5, 4, 4, 3],\n-  },\n-  {\n-    title: \"견적 문의 요청(건)\",\n-    total: 100,\n-    period: 40,\n-    week: 40,\n-    counts: [3, 3, 4, 6, 8, 10, 6],\n-  },\n-  {\n-    title: \"견적 PDF 다운로드(건)\",\n-    total: 88,\n-    period: 39,\n-    week: 39,\n-    counts: [8, 5, 3, 3, 10, 10, 2],\n-  },\n-].map((item) => ({\n-  ...item,\n-  data: labels.map((label, i) => ({\n-    label,\n-    count: item.counts[i],\n-  })),\n-}));\n-\n-const DashboardWrapper = styled.div`\n-  display: flex;\n-  flex-wrap: wrap;\n-  gap: 16px;\n-  width: 100%;\n-  box-sizing: border-box;\n-`;\n-\n-\n-\n-\n-const ChartCard = styled.div`\n-  background: #fff;\n-  border: 1px solid #dbdfea;\n-  border-radius: 8px;\n-  flex: 1 1 calc((100% - 32px) / 3); // gap 16px × 2\n-  min-width: 360px;\n-  height: 430px;\n-  padding: 20px;\n-  box-sizing: border-box;\n-  display: flex;\n-  flex-direction: column;\n-`;\n-\n-\n-\n-const LineChartCard = styled(ChartCard)`\n-  width: 100%;\n-  grid-column: 1 / -1;\n-`;\n-\n-const MetaSection = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  gap: 10px;\n-  margin-bottom: 20px;\n-`;\n-\n-const Row = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-`;\n-\n-const ChartContainer = styled.div`\n-  height: 280px;\n-`;\n-\n-const Title = styled.div`\n-  font-size: 15px;\n-  font-weight: 700;\n-  color: #000;\n-`;\n-\n-const Value = styled.div`\n-  font-size: 15px;\n-  font-weight: 700;\n-  color: #000;\n-`;\n-\n-const Label = styled.div`\n-  font-size: 13px;\n-  color: #999;\n-`;\n-\n-interface TopItem {\n-  name: string;\n-  date: string;\n-  value: string; // 금액 또는 횟수\n-}\n-\n-\n-const dummyRequestTop5: TopItem[] = [\n-  { name: \"IoT 앱\", date: \"2시간 전\", value: \"30,000,000원\" },\n-  { name: \"식음료\", date: \"한달 전\", value: \"40,600,000원\" },\n-  { name: \"AI\", date: \"25.03.14\", value: \"90,000,000원\" },\n-  { name: \"전산\", date: \"25.02.13\", value: \"80,500,000원\" },\n-  { name: \"IoT 앱\", date: \"25.01.12\", value: \"30,000,000원\" },\n-];\n-\n-const dummyDownloadTop5: TopItem[] = [\n-  { name: \"보안시스템\", date: \"방금 전\", value: \"25,000,000원\" },\n-  { name: \"의료기기\", date: \"1시간 전\", value: \"50,000,000원\" },\n-  { name: \"스마트홈\", date: \"25.03.11\", value: \"15,000,000원\" },\n-  { name: \"에너지관리\", date: \"25.02.25\", value: \"12,300,000원\" },\n-  { name: \"AI 분석\", date: \"25.02.01\", value: \"32,000,000원\" },\n-];\n-\n-const dummyAccessTop5: TopItem[] = [\n-  { name: \"Lucas\", date: \"25.05.14\", value: \"20회\" },\n-  { name: \"David\", date: \"25.05.13\", value: \"16회\" },\n-  { name: \"Elena\", date: \"25.05.12\", value: \"12회\" },\n-  { name: \"오하연\", date: \"25.05.11\", value: \"8회\" },\n-  { name: \"정혜진\", date: \"25.05.10\", value: \"6회\" },\n-];\n-\n-\n-\n-// ---------- ChartCard Renderer ----------\n-const renderBarChartCard = (item: typeof barChartMeta[number]) => (\n-  <ChartCard key={item.title}>\n-    <MetaSection>\n-      <Row>\n-        <Title>{item.title}</Title>\n-        <Value>{item.total.toLocaleString()}</Value>\n-      </Row>\n-      <Row>\n-        <Label>기간내</Label>\n-        <Label>{item.period}</Label>\n-      </Row>\n-      <Row>\n-        <Label>7일내</Label>\n-        <Label>{item.week}</Label>\n-      </Row>\n-    </MetaSection>\n-    <ChartContainer>\n-      <MyResponsiveBar data={item.data} />\n-    </ChartContainer>\n-  </ChartCard>\n-);\n-\n-const renderTopListCard = (title: string, items: { name: string; date: string; value: string }[]) => (\n-  <ChartCard key={title}>\n-    <Title>{title}</Title>\n-    <TopListWrapper>\n-      {items.map((item, i) => (\n-        <TopListItem key={i}>\n-          <ProfileSection>\n-            <ProfileImage src=\"/icon_user.png\" alt=\"user\" />\n-            <NameDateBox>\n-              <Name>{item.name}</Name>\n-              <DateText>{item.date}</DateText>\n-            </NameDateBox>\n-          </ProfileSection>\n-          <Price>{item.value}</Price>\n-        </TopListItem>\n-      ))}\n-    </TopListWrapper>\n-  </ChartCard>\n-);\n-\n-const renderVisitPieCard = () => {\n-  const data = visitMeta.accessUser;\n-  return (\n-    <ChartCard>\n-      <Title>방문유형 (PC · Mobile)</Title>\n-      <MetaSection>\n-        {[\"접속수별\", \"접속자별\"].map((label, idx) => {\n-          const key = idx === 0 ? \"accessCount\" : \"accessUser\";\n-          const row = visitMeta[key as \"accessCount\" | \"accessUser\"];\n-          const total = row.pc + row.mobile;\n-          return (\n-            <Row key={label}>\n-              <Label style={{ color: \"#324c8e\", minWidth: 80 }}>{label}</Label>\n-              <Value style={{ color: \"#324c8e\" }}>{row.pc}</Value>\n-              <Value style={{ color: \"#678b6c\" }}>{row.mobile}</Value>\n-              <Value>{total}</Value>\n-            </Row>\n-          );\n-        })}\n-      </MetaSection>\n-      <ChartContainer>\n-        <ResponsivePie\n-          data={[\n-            { id: \"PC\", label: \"PC\", value: visitMeta.accessUser.pc },\n-            { id: \"Mobile\", label: \"Mobile\", value: visitMeta.accessUser.mobile },\n-          ]}\n-          margin={{ top: 0, right: 10, bottom: 20, left: 10 }}\n-          innerRadius={0.6}\n-          padAngle={1}\n-          cornerRadius={3}\n-          enableArcLabels={false}\n-          enableArcLinkLabels={false}\n-          tooltip={() => null}\n-          colors={[\"#324c8e\", \"#678b6c\"]}\n-          layers={[\n-            \"arcs\",\n-            ({ centerX, centerY }) => (\n-              <>\n-                <text x={centerX} y={centerY - 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n-                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#324c8e\" }}>\n-                  PC: {visitMeta.accessUser.pc}\n-                </text>\n-                <text x={centerX} y={centerY + 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n-                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#678b6c\" }}>\n-                  Mobile: {visitMeta.accessUser.mobile}\n-                </text>\n-              </>\n-            ),\n-          ]}\n-        />\n-      </ChartContainer>\n-    </ChartCard>\n-  );\n-};\n-\n-// ---------- Main Page ----------\n-const CmsDashboardPage = () => {\n-  const [fromDate, setFromDate] = useState(dayjs().subtract(6, \"month\").format(\"YYYY-MM-DD\"));\n-  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n-  const [visitorView, setVisitorView] = useState(\"월간\");\n-\n-  const handleDateChangeInternal = (newFrom: string, newTo: string) => {\n-    setFromDate(newFrom);\n-    setToDate(newTo);\n-  };\n-\n-  const visitorData = [\n-    {\n-      id: \"방문자 수\",\n-      data: [\n-        { x: \"1\", y: 30 },\n-        { x: \"2\", y: 50 },\n-        { x: \"3\", y: 20 },\n-        { x: \"4\", y: 16 },\n-        { x: \"5\", y: 18 },\n-        { x: \"6\", y: 16 },\n-        { x: \"7\", y: 16 },\n-        { x: \"8\", y: 62 },\n-        { x: \"9\", y: 48 },\n-        { x: \"10\", y: 40 },\n-        { x: \"11\", y: 12 },\n-        { x: \"12\", y: 14 },\n-        { x: \"13\", y: 30 },\n-      ],\n-    },\n-  ];\n-\n-  return (\n-    <PageWrapper>\n-    <Container $themeMode=\"light\">\n-      <TopHeader>\n-        <h1>CMS 대시보드</h1>\n-      </TopHeader>\n-\n-      <ControlHeader>\n-        <GenericDateRangePicker\n-          initialFromDate={fromDate}\n-          initialToDate={toDate}\n-          onDateChange={handleDateChangeInternal}\n-          themeMode=\"light\"\n-        />\n-        <SearchButton $themeMode=\"light\">조회</SearchButton>\n-      </ControlHeader>\n-\n-      <DashboardWrapper>\n-        {/* 1행 */}\n-        {renderBarChartCard(barChartMeta[0])}\n-        <ChartCard>\n-\n-    <LineChartHeader>\n-    <Title>방문자 수(건)</Title>\n-    <Value>40</Value>\n-    <LineChartButtonGroup>\n-      {['주간', '월간', '연간'].map((label) => (\n-        <LineChartButton\n-          key={label}\n-          active={visitorView === label}\n-          onClick={() => setVisitorView(label)}>\n-          {label}\n-        </LineChartButton>\n-      ))}\n-    </LineChartButtonGroup>\n-  </LineChartHeader>\n-\n-  <ChartContainer>\n-    <ResponsiveLine\n-      data={visitorData}\n-      margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n-      xScale={{ type: \"point\" }}\n-      yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n-      axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n-      axisLeft={null}\n-      enableArea={false}\n-      colors={[\"#2f64cb\"]}\n-      lineWidth={2}\n-      pointSize={6}\n-      pointColor=\"#fff\"\n-      pointBorderWidth={2}\n-      pointBorderColor=\"#2f64cb\"\n-      useMesh\n-    />\n-  </ChartContainer>\n-</ChartCard>\n-        {renderVisitPieCard()}\n-\n-        {/* 2행 */}\n-        {renderBarChartCard(barChartMeta[3])}\n-        {renderTopListCard(\"견적 문의 대상 TOP 5\", dummyRequestTop5)}\n-        {renderBarChartCard(barChartMeta[2])}\n-\n-        {/* 3행 */}\n-        {renderBarChartCard(barChartMeta[4])}\n-        {renderTopListCard(\"견적 다운로드 TOP 5\", dummyDownloadTop5)}\n-        {renderTopListCard(\"자주 접속 TOP 5\", dummyAccessTop5)}\n-\n-\n-        {/* 마지막: AI 사용 현황 */}\n-        <LineChartCard>\n-          <LineChartHeader>\n-            <Title>AI 사용 현황</Title>\n-            <LineChartButtonGroup>\n-              <LineChartButton active>주간</LineChartButton>\n-              <LineChartButton>월간</LineChartButton>\n-              <LineChartButton>연간</LineChartButton>\n-            </LineChartButtonGroup>\n-          </LineChartHeader>\n-          <ChartContainer>\n-            <ResponsiveLine\n-              data={dummyLineData}\n-              margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n-              xScale={{ type: \"point\" }}\n-              yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n-              axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n-              axisLeft={null}\n-              enableArea\n-              areaOpacity={0.15}\n-              colors={[\"#2f64cb\"]}\n-              lineWidth={3}\n-              pointSize={6}\n-              pointColor=\"#2f64cb\"\n-              pointBorderWidth={2}\n-              pointBorderColor=\"#fff\"\n-              useMesh\n-            />\n-          </ChartContainer>\n-        </LineChartCard>\n-      </DashboardWrapper>\n-    </Container>\n-    </PageWrapper>\n-  );\n-};\n-\n-\n-\n-export default CmsDashboardPage;\n"
                },
                {
                    "date": 1747728058633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n \n const Container = styled.div<{ $themeMode: ThemeMode }>`\n   min-width: 1200px;\n   width: 100%;\n-  padding: 30px;\n+  padding: 0px 30px;\n   background-color: ${({ $themeMode }) =>\n     $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n   color: ${({ $themeMode }) =>\n     $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n"
                },
                {
                    "date": 1747728071533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,8 @@\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   width: 100%;\n-  margin-bottom: 20px;\n   /* margin-bottom: 20px; */\n   gap: 15px;\n `;\n \n"
                },
                {
                    "date": 1747728078629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,8 +139,9 @@\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   width: 100%;\n+  margin-bottom: 20px;\n   /* margin-bottom: 20px; */\n   gap: 15px;\n `;\n \n"
                },
                {
                    "date": 1747728087024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n   align-items: center;\n   width: 100%;\n   margin-bottom: 20px;\n   /* margin-bottom: 20px; */\n-  gap: 15px;\n+  /* gap: 15px; */\n `;\n \n const ControlHeader = styled(TopHeader)``;\n \n"
                },
                {
                    "date": 1747728094943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,10 +139,10 @@\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   width: 100%;\n-  margin-bottom: 20px;\n   /* margin-bottom: 20px; */\n+  /* margin-bottom: 20px; */\n   /* gap: 15px; */\n `;\n \n const ControlHeader = styled(TopHeader)``;\n"
                },
                {
                    "date": 1747728128020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,14 +139,13 @@\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   width: 100%;\n-  /* margin-bottom: 20px; */\n-  /* margin-bottom: 20px; */\n-  /* gap: 15px; */\n `;\n \n-const ControlHeader = styled(TopHeader)``;\n+const ControlHeader = styled(TopHeader)`\n+  margin-bottom: 20px;\n+`;\n \n const visitMeta = {\n   title: \"방문유형 (PC · Mobile)\",\n   accessCount: { pc: 150, mobile: 40 },\n"
                }
            ],
            "date": 1747727881103,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ResponsivePie } from \"@nivo/pie\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport MyResponsiveBar from \"@/components/Chart/MyResponsiveBar\";\nimport { THEME_COLORS, ThemeMode } from \"@/styles/theme_colors\";\nimport GenericDateRangePicker from \"@/components/CustomList/GenericDateRangePicker\";\nimport dayjs from \"dayjs\";\n\nconst PageWrapper = styled.div`\n  width: 100%; // ✅ 수정: 부모(MainContent)의 너비를 그대로 따라감\n  overflow-x: auto;\n`;\n\n\n\nconst LineChartHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst LineChartButtonGroup = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst LineChartButton = styled.button.withConfig({\n  shouldForwardProp: (prop) => prop !== \"active\",\n})<{ active?: boolean }>`\n  padding: 8px 16px;\n  font-size: 14px;\n  font-weight: 500;\n  border: 1px solid ${({ active }) => (active ? \"#2f64cb\" : \"#ccc\")};\n  background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#eee\")};\n  color: ${({ active }) => (active ? \"#fff\" : \"#666\")};\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ active }) => (active ? \"#2f64cb\" : \"#ddd\")};\n  }\n`;\n\n\n\nconst TopListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 16px;\n`;\n\nconst TopListItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n  height: 40px;\n  \n  justify-content: space-between;\n`;\n\nconst ProfileSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n`;\n\nconst ProfileImage = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nconst NameDateBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Name = styled.div`\n  font-size: 16px;\n  color: #3e3e3e;\n  font-weight: 500;\n`;\n\nconst DateText = styled.div`\n  font-size: 14px;\n  color: #808080;\n`;\n\nconst Price = styled.div`\n  font-size: 16px;\n  color: #3e3e3e;\n  font-weight: 500;\n  white-space: nowrap;\n`;\n\n\nconst SearchButton = styled.button<{ $themeMode: ThemeMode }>`\n  width: 60px;\n  height: 40px;\n  margin-left: 10px;\n  background: ${({ $themeMode }) =>\n    $themeMode === \"light\" ? THEME_COLORS.light.primary : THEME_COLORS.dark.buttonBackground};\n  color: ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.buttonText : THEME_COLORS.dark.buttonText)};\n  border: 1px solid\n    ${({ $themeMode }) => ($themeMode === \"light\" ? THEME_COLORS.light.borderColor : THEME_COLORS.dark.borderColor)};\n  border-left: none;\n  border-radius: 0;\n  font-weight: 500;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst Container = styled.div<{ $themeMode: ThemeMode }>`\n  min-width: 1200px;\n  width: 100%;\n  padding: 30px 40px;\n  background-color: ${({ $themeMode }) =>\n    $themeMode === 'light' ? THEME_COLORS.light.background : THEME_COLORS.dark.background};\n  color: ${({ $themeMode }) =>\n    $themeMode === 'light' ? THEME_COLORS.light.text : THEME_COLORS.dark.text};\n  box-sizing: border-box;\n`;\n\n\n\nconst TopHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  /* margin-bottom: 20px; */\n  gap: 15px;\n`;\n\nconst ControlHeader = styled(TopHeader)``;\n\nconst visitMeta = {\n  title: \"방문유형 (PC · Mobile)\",\n  accessCount: { pc: 150, mobile: 40 },\n  accessUser: { pc: 140, mobile: 25 },\n};\n\nconst labels = [\"7일전\", \"6일전\", \"5일전\", \"4일전\", \"3일전\", \"2일전\", \"기준일\"];\n\nconst dummyLineData = [\n  {\n    id: \"AI 사용량\",\n    data: [\n      { x: \"2025.05.07\", y: 3 },\n      { x: \"2025.05.08\", y: 4 },\n      { x: \"2025.05.09\", y: 7 },\n      { x: \"2025.05.10\", y: 7 },\n      { x: \"2025.05.11\", y: 10 },\n      { x: \"2025.05.12\", y: 11 },\n      { x: \"2025.05.13\", y: 14 },\n    ],\n  },\n];\n\nconst barChartMeta = [\n  {\n    title: \"누적 가입 고객수(명)\",\n    total: 1234,\n    period: 41,\n    week: 41,\n    counts: [8, 5, 3, 3, 10, 10, 2],\n  },\n  {\n    title: \"견적 다운로드(건)\",\n    total: 200,\n    period: 40,\n    week: 40,\n    counts: [5, 3, 4, 6, 7, 10, 5],\n  },\n  {\n    title: \"AI 답변 확인 필요(건)\",\n    total: 87,\n    period: 29,\n    week: 29,\n    counts: [4, 4, 5, 5, 4, 4, 3],\n  },\n  {\n    title: \"견적 문의 요청(건)\",\n    total: 100,\n    period: 40,\n    week: 40,\n    counts: [3, 3, 4, 6, 8, 10, 6],\n  },\n  {\n    title: \"견적 PDF 다운로드(건)\",\n    total: 88,\n    period: 39,\n    week: 39,\n    counts: [8, 5, 3, 3, 10, 10, 2],\n  },\n].map((item) => ({\n  ...item,\n  data: labels.map((label, i) => ({\n    label,\n    count: item.counts[i],\n  })),\n}));\n\nconst DashboardWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\n\n\n\nconst ChartCard = styled.div`\n  background: #fff;\n  border: 1px solid #dbdfea;\n  border-radius: 8px;\n  flex: 1 1 calc((100% - 32px) / 3); // gap 16px × 2\n  min-width: 360px;\n  height: 430px;\n  padding: 20px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n`;\n\n\n\nconst LineChartCard = styled(ChartCard)`\n  width: 100%;\n  grid-column: 1 / -1;\n`;\n\nconst MetaSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ChartContainer = styled.div`\n  height: 280px;\n`;\n\nconst Title = styled.div`\n  font-size: 15px;\n  font-weight: 700;\n  color: #000;\n`;\n\nconst Value = styled.div`\n  font-size: 15px;\n  font-weight: 700;\n  color: #000;\n`;\n\nconst Label = styled.div`\n  font-size: 13px;\n  color: #999;\n`;\n\ninterface TopItem {\n  name: string;\n  date: string;\n  value: string; // 금액 또는 횟수\n}\n\n\nconst dummyRequestTop5: TopItem[] = [\n  { name: \"IoT 앱\", date: \"2시간 전\", value: \"30,000,000원\" },\n  { name: \"식음료\", date: \"한달 전\", value: \"40,600,000원\" },\n  { name: \"AI\", date: \"25.03.14\", value: \"90,000,000원\" },\n  { name: \"전산\", date: \"25.02.13\", value: \"80,500,000원\" },\n  { name: \"IoT 앱\", date: \"25.01.12\", value: \"30,000,000원\" },\n];\n\nconst dummyDownloadTop5: TopItem[] = [\n  { name: \"보안시스템\", date: \"방금 전\", value: \"25,000,000원\" },\n  { name: \"의료기기\", date: \"1시간 전\", value: \"50,000,000원\" },\n  { name: \"스마트홈\", date: \"25.03.11\", value: \"15,000,000원\" },\n  { name: \"에너지관리\", date: \"25.02.25\", value: \"12,300,000원\" },\n  { name: \"AI 분석\", date: \"25.02.01\", value: \"32,000,000원\" },\n];\n\nconst dummyAccessTop5: TopItem[] = [\n  { name: \"Lucas\", date: \"25.05.14\", value: \"20회\" },\n  { name: \"David\", date: \"25.05.13\", value: \"16회\" },\n  { name: \"Elena\", date: \"25.05.12\", value: \"12회\" },\n  { name: \"오하연\", date: \"25.05.11\", value: \"8회\" },\n  { name: \"정혜진\", date: \"25.05.10\", value: \"6회\" },\n];\n\n\n\n// ---------- ChartCard Renderer ----------\nconst renderBarChartCard = (item: typeof barChartMeta[number]) => (\n  <ChartCard key={item.title}>\n    <MetaSection>\n      <Row>\n        <Title>{item.title}</Title>\n        <Value>{item.total.toLocaleString()}</Value>\n      </Row>\n      <Row>\n        <Label>기간내</Label>\n        <Label>{item.period}</Label>\n      </Row>\n      <Row>\n        <Label>7일내</Label>\n        <Label>{item.week}</Label>\n      </Row>\n    </MetaSection>\n    <ChartContainer>\n      <MyResponsiveBar data={item.data} />\n    </ChartContainer>\n  </ChartCard>\n);\n\nconst renderTopListCard = (title: string, items: { name: string; date: string; value: string }[]) => (\n  <ChartCard key={title}>\n    <Title>{title}</Title>\n    <TopListWrapper>\n      {items.map((item, i) => (\n        <TopListItem key={i}>\n          <ProfileSection>\n            <ProfileImage src=\"/icon_user.png\" alt=\"user\" />\n            <NameDateBox>\n              <Name>{item.name}</Name>\n              <DateText>{item.date}</DateText>\n            </NameDateBox>\n          </ProfileSection>\n          <Price>{item.value}</Price>\n        </TopListItem>\n      ))}\n    </TopListWrapper>\n  </ChartCard>\n);\n\nconst renderVisitPieCard = () => {\n  const data = visitMeta.accessUser;\n  return (\n    <ChartCard>\n      <Title>방문유형 (PC · Mobile)</Title>\n      <MetaSection>\n        {[\"접속수별\", \"접속자별\"].map((label, idx) => {\n          const key = idx === 0 ? \"accessCount\" : \"accessUser\";\n          const row = visitMeta[key as \"accessCount\" | \"accessUser\"];\n          const total = row.pc + row.mobile;\n          return (\n            <Row key={label}>\n              <Label style={{ color: \"#324c8e\", minWidth: 80 }}>{label}</Label>\n              <Value style={{ color: \"#324c8e\" }}>{row.pc}</Value>\n              <Value style={{ color: \"#678b6c\" }}>{row.mobile}</Value>\n              <Value>{total}</Value>\n            </Row>\n          );\n        })}\n      </MetaSection>\n      <ChartContainer>\n        <ResponsivePie\n          data={[\n            { id: \"PC\", label: \"PC\", value: visitMeta.accessUser.pc },\n            { id: \"Mobile\", label: \"Mobile\", value: visitMeta.accessUser.mobile },\n          ]}\n          margin={{ top: 0, right: 10, bottom: 20, left: 10 }}\n          innerRadius={0.6}\n          padAngle={1}\n          cornerRadius={3}\n          enableArcLabels={false}\n          enableArcLinkLabels={false}\n          tooltip={() => null}\n          colors={[\"#324c8e\", \"#678b6c\"]}\n          layers={[\n            \"arcs\",\n            ({ centerX, centerY }) => (\n              <>\n                <text x={centerX} y={centerY - 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#324c8e\" }}>\n                  PC: {visitMeta.accessUser.pc}\n                </text>\n                <text x={centerX} y={centerY + 10} textAnchor=\"middle\" dominantBaseline=\"central\"\n                  style={{ fontSize: \"14px\", fontWeight: \"bold\", fill: \"#678b6c\" }}>\n                  Mobile: {visitMeta.accessUser.mobile}\n                </text>\n              </>\n            ),\n          ]}\n        />\n      </ChartContainer>\n    </ChartCard>\n  );\n};\n\n// ---------- Main Page ----------\nconst CmsDashboardPage = () => {\n  const [fromDate, setFromDate] = useState(dayjs().subtract(6, \"month\").format(\"YYYY-MM-DD\"));\n  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n  const [visitorView, setVisitorView] = useState(\"월간\");\n\n  const handleDateChangeInternal = (newFrom: string, newTo: string) => {\n    setFromDate(newFrom);\n    setToDate(newTo);\n  };\n\n  const visitorData = [\n    {\n      id: \"방문자 수\",\n      data: [\n        { x: \"1\", y: 30 },\n        { x: \"2\", y: 50 },\n        { x: \"3\", y: 20 },\n        { x: \"4\", y: 16 },\n        { x: \"5\", y: 18 },\n        { x: \"6\", y: 16 },\n        { x: \"7\", y: 16 },\n        { x: \"8\", y: 62 },\n        { x: \"9\", y: 48 },\n        { x: \"10\", y: 40 },\n        { x: \"11\", y: 12 },\n        { x: \"12\", y: 14 },\n        { x: \"13\", y: 30 },\n      ],\n    },\n  ];\n\n  return (\n    <PageWrapper>\n    <Container $themeMode=\"light\">\n      <TopHeader>\n        <h1>CMS 대시보드</h1>\n      </TopHeader>\n\n      <ControlHeader>\n        <GenericDateRangePicker\n          initialFromDate={fromDate}\n          initialToDate={toDate}\n          onDateChange={handleDateChangeInternal}\n          themeMode=\"light\"\n        />\n        <SearchButton $themeMode=\"light\">조회</SearchButton>\n      </ControlHeader>\n\n      <DashboardWrapper>\n        {/* 1행 */}\n        {renderBarChartCard(barChartMeta[0])}\n        <ChartCard>\n\n    <LineChartHeader>\n    <Title>방문자 수(건)</Title>\n    <Value>40</Value>\n    <LineChartButtonGroup>\n      {['주간', '월간', '연간'].map((label) => (\n        <LineChartButton\n          key={label}\n          active={visitorView === label}\n          onClick={() => setVisitorView(label)}>\n          {label}\n        </LineChartButton>\n      ))}\n    </LineChartButtonGroup>\n  </LineChartHeader>\n\n  <ChartContainer>\n    <ResponsiveLine\n      data={visitorData}\n      margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n      xScale={{ type: \"point\" }}\n      yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n      axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n      axisLeft={null}\n      enableArea={false}\n      colors={[\"#2f64cb\"]}\n      lineWidth={2}\n      pointSize={6}\n      pointColor=\"#fff\"\n      pointBorderWidth={2}\n      pointBorderColor=\"#2f64cb\"\n      useMesh\n    />\n  </ChartContainer>\n</ChartCard>\n        {renderVisitPieCard()}\n\n        {/* 2행 */}\n        {renderBarChartCard(barChartMeta[3])}\n        {renderTopListCard(\"견적 문의 대상 TOP 5\", dummyRequestTop5)}\n        {renderBarChartCard(barChartMeta[2])}\n\n        {/* 3행 */}\n        {renderBarChartCard(barChartMeta[4])}\n        {renderTopListCard(\"견적 다운로드 TOP 5\", dummyDownloadTop5)}\n        {renderTopListCard(\"자주 접속 TOP 5\", dummyAccessTop5)}\n\n\n        {/* 마지막: AI 사용 현황 */}\n        <LineChartCard>\n          <LineChartHeader>\n            <Title>AI 사용 현황</Title>\n            <LineChartButtonGroup>\n              <LineChartButton active>주간</LineChartButton>\n              <LineChartButton>월간</LineChartButton>\n              <LineChartButton>연간</LineChartButton>\n            </LineChartButtonGroup>\n          </LineChartHeader>\n          <ChartContainer>\n            <ResponsiveLine\n              data={dummyLineData}\n              margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n              xScale={{ type: \"point\" }}\n              yScale={{ type: \"linear\", min: \"auto\", max: \"auto\" }}\n              axisBottom={{ tickRotation: 0, tickPadding: 5 }}\n              axisLeft={null}\n              enableArea\n              areaOpacity={0.15}\n              colors={[\"#2f64cb\"]}\n              lineWidth={3}\n              pointSize={6}\n              pointColor=\"#2f64cb\"\n              pointBorderWidth={2}\n              pointBorderColor=\"#fff\"\n              useMesh\n            />\n          </ChartContainer>\n        </LineChartCard>\n      </DashboardWrapper>\n    </Container>\n    </PageWrapper>\n  );\n};\n\n\n\nexport default CmsDashboardPage;\n"
        }
    ]
}