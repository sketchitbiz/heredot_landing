{
    "sourceFile": "src/app/cms/layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1747714804754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747727811683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \n // 메인 콘텐츠 영역 스타일\n const MainContent = styled.div<{ $isSidebarCollapsed: boolean }>`\n   margin-left: ${({ $isSidebarCollapsed }) => ($isSidebarCollapsed ? \"80px\" : \"250px\")};\n-  padding: 20px 40px;\n+  /* padding: 20px 40px; */\n   transition: margin-left 0.3s ease;\n   height: 100vh;\n   overflow-x: auto; // ✅ 가로 스크롤\n   overflow-y: auto;\n"
                },
                {
                    "date": 1748492245410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n \n \n import { THEME_COLORS } from \"@/styles/theme_colors\";\n import { toast, ToastContainer } from 'react-toastify';\n+import ResponsiveSidebar from \"@/components/CustomSidebar/ResponsiveSidebar\";\n \n \n \n // 메인 콘텐츠 영역 스타일\n@@ -148,9 +149,9 @@\n         pauseOnFocusLoss\n         draggable\n         pauseOnHover\n       />\n-      <CustomSidebar\n+      <ResponsiveSidebar\n         isCollapsed={isCollapsed}\n         toggleSidebar={toggleSidebar}\n         menuItems={menuItems}\n         footerIcon={<LogoutIcon />}\n@@ -161,9 +162,9 @@\n           name=\"테스트 사용자\"\n           iconSrc=\"/favicon.ico\"\n           showTime={false} // 시간 표시\n         />\n-      </CustomSidebar>\n+      </ResponsiveSidebar>\n   \n       <MainContent $isSidebarCollapsed={isCollapsed}>{children}</MainContent>\n     </OuterLayoutContainer>\n     \n"
                },
                {
                    "date": 1748492878969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,11 @@\n     }\n   }, [ready, isLoggedIn, isLoginPage]);\n \n   const [isCollapsed, setIsCollapsed] = useState(false);\n+  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false); // ✅\n+\n+const effectiveSidebarState = isMobileSidebarOpen ? false : isCollapsed;\n   const toggleSidebar = () => setIsCollapsed((prev) => !prev);\n \n   const handleLogout = () => {\n     logout();               // 상태 및 로컬스토리지 정리\n@@ -155,8 +158,9 @@\n         toggleSidebar={toggleSidebar}\n         menuItems={menuItems}\n         footerIcon={<LogoutIcon />}\n         onFooterClick={handleLogout}\n+        onMobileSidebarOpenChange={setIsMobileSidebarOpen}\n       >\n         <CustomSidebarHeader\n           isCollapsed={isCollapsed}\n           name=\"테스트 사용자\"\n@@ -164,9 +168,9 @@\n           showTime={false} // 시간 표시\n         />\n       </ResponsiveSidebar>\n   \n-      <MainContent $isSidebarCollapsed={isCollapsed}>{children}</MainContent>\n+      <MainContent $isSidebarCollapsed={effectiveSidebarState}>{children}</MainContent>\n     </OuterLayoutContainer>\n     \n   );\n   \n"
                },
                {
                    "date": 1748492982368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n         onMobileSidebarOpenChange={setIsMobileSidebarOpen}\n       >\n         <CustomSidebarHeader\n           isCollapsed={isCollapsed}\n-          name=\"테스트 사용자\"\n+          // name=\"테스트 사용자\"\n           iconSrc=\"/favicon.ico\"\n           showTime={false} // 시간 표시\n         />\n       </ResponsiveSidebar>\n"
                },
                {
                    "date": 1748493244359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,68 +1,35 @@\n-\"use client\";\n+'use client';\n \n-import React, { useState, useEffect } from \"react\";\n-import styled from \"styled-components\";\n-import { AdminAuthProvider, useAdminAuth } from \"@/contexts/AdminAuthContext\";\n-import { usePathname, useRouter } from \"next/navigation\";\n-\n-import CustomSidebar, { MenuItemConfig } from \"@/components/CustomSidebar/CustomSidebar\";\n-import CustomSidebarHeader from \"@/components/CustomSidebar/CustomSidebarHeader\";\n-\n-// 아이콘 임포트\n-import DashboardIcon from '@mui/icons-material/Dashboard';\n-import AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\n-import PeopleIcon from '@mui/icons-material/People';\n-import DatasetIcon from '@mui/icons-material/Dataset';\n-import SettingsIcon from '@mui/icons-material/Settings';\n-import ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\n-import DescriptionIcon from '@mui/icons-material/Description';\n-import LogoutIcon from '@mui/icons-material/Logout';\n-import AssessmentIcon from '@mui/icons-material/Assessment';\n-import TextFieldsIcon from '@mui/icons-material/TextFields';\n-import QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\n-import ChatIcon from '@mui/icons-material/Chat';\n-import BusinessIcon from '@mui/icons-material/Business';\n-import TuneIcon from '@mui/icons-material/Tune';\n-import DownloadIcon from '@mui/icons-material/Download';\n-import ContactSupportIcon from '@mui/icons-material/ContactSupport';\n-import StorageIcon from '@mui/icons-material/Storage';\n-\n-\n-\n-\n-import { THEME_COLORS } from \"@/styles/theme_colors\";\n+import React, { useState, useEffect, useMemo } from 'react';\n+import styled from 'styled-components';\n+import { usePathname, useRouter } from 'next/navigation';\n+import { AdminAuthProvider, useAdminAuth } from '@/contexts/AdminAuthContext';\n+import { useDevice } from '@/contexts/DeviceContext';\n+import ResponsiveSidebar from '@/components/CustomSidebar/ResponsiveSidebar';\n+import CustomSidebarHeader from '@/components/CustomSidebar/CustomSidebarHeader';\n+import { THEME_COLORS } from '@/styles/theme_colors';\n import { toast, ToastContainer } from 'react-toastify';\n-import ResponsiveSidebar from \"@/components/CustomSidebar/ResponsiveSidebar\";\n+import {\n+  Dashboard as DashboardIcon,\n+  AdminPanelSettings as AdminPanelSettingsIcon,\n+  People as PeopleIcon,\n+  Dataset as DatasetIcon,\n+  Settings as SettingsIcon,\n+  Description as DescriptionIcon,\n+  Logout as LogoutIcon,\n+  Assessment as AssessmentIcon,\n+  TextFields as TextFieldsIcon,\n+  QuestionAnswer as QuestionAnswerIcon,\n+  Chat as ChatIcon,\n+  Business as BusinessIcon,\n+  Tune as TuneIcon,\n+  Download as DownloadIcon,\n+  ContactSupport as ContactSupportIcon,\n+  Storage as StorageIcon,\n+} from '@mui/icons-material';\n+import type { MenuItemConfig } from '@/components/CustomSidebar/CustomSidebar';\n \n-\n-\n-// 메인 콘텐츠 영역 스타일\n-const MainContent = styled.div<{ $isSidebarCollapsed: boolean }>`\n-  margin-left: ${({ $isSidebarCollapsed }) => ($isSidebarCollapsed ? \"80px\" : \"250px\")};\n-  /* padding: 20px 40px; */\n-  transition: margin-left 0.3s ease;\n-  height: 100vh;\n-  overflow-x: auto; // ✅ 가로 스크롤\n-  overflow-y: auto;\n-  min-width: 1200px; // ✅ 최소 크기\n-  box-sizing: border-box;\n-`;\n-\n-\n-\n-const OuterLayoutContainer = styled.div<{ $themeMode: \"light\" | \"dark\" }>`\n-  width: 100vw;\n-  min-width: 1200px;\n-  height: 100vh;\n-  overflow-x: auto; // 좌우 스크롤 가능\n-  background-color: ${({ $themeMode }) =>\n-    $themeMode === \"light\"\n-      ? THEME_COLORS.light.background\n-      : THEME_COLORS.dark.background};\n-`;\n-\n-\n export default function CmsLayout({ children }: { children: React.ReactNode }) {\n   return (\n     <AdminAuthProvider>\n       <ProtectedCmsLayout>{children}</ProtectedCmsLayout>\n@@ -70,90 +37,78 @@\n   );\n }\n \n function ProtectedCmsLayout({ children }: { children: React.ReactNode }) {\n-  const { isLoggedIn, ready } = useAdminAuth();\n+  const { isLoggedIn, ready, logout } = useAdminAuth();\n   const pathname = usePathname();\n   const router = useRouter();\n-  const isLoginPage = pathname === \"/cms/login\";\n-  const { logout } = useAdminAuth();\n+  const device = useDevice();\n+  const isLoginPage = pathname === '/cms/login';\n \n-\n   useEffect(() => {\n     if (ready && !isLoggedIn && !isLoginPage) {\n-      router.replace(\"/cms/login\");\n+      router.replace('/cms/login');\n     }\n   }, [ready, isLoggedIn, isLoginPage]);\n \n   const [isCollapsed, setIsCollapsed] = useState(false);\n-  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false); // ✅\n+  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\n \n-const effectiveSidebarState = isMobileSidebarOpen ? false : isCollapsed;\n   const toggleSidebar = () => setIsCollapsed((prev) => !prev);\n \n   const handleLogout = () => {\n-    logout();               // 상태 및 로컬스토리지 정리\n-    router.replace('/cms/login'); // 로그인 페이지로 리디렉션\n-    toast.success('로그아웃 되었습니다'); \n+    logout();\n+    router.replace('/cms/login');\n+    toast.success('로그아웃 되었습니다');\n   };\n \n+  const effectiveSidebarExpanded = useMemo(\n+    () => (device === 'mobile' ? isMobileSidebarOpen : !isCollapsed),\n+    [device, isMobileSidebarOpen, isCollapsed]\n+  );\n+\n   const menuItems: MenuItemConfig[] = [\n-    { icon: <DashboardIcon />, title: \"대시보드\", path: \"/cms\" },\n-    { icon: <AdminPanelSettingsIcon />, title: \"관리자회원관리\", path: \"/cms/adminMng\" },\n-    { icon: <PeopleIcon />, title: \"고객관리\", path: \"/cms/userMng\" },\n+    { icon: <DashboardIcon />, title: '대시보드', path: '/cms' },\n+    { icon: <AdminPanelSettingsIcon />, title: '관리자회원관리', path: '/cms/adminMng' },\n+    { icon: <PeopleIcon />, title: '고객관리', path: '/cms/userMng' },\n     {\n       icon: <DatasetIcon />,\n-      title: \"AI 데이터 관리\",\n-      path: \"/cms/aiData\",\n+      title: 'AI 데이터 관리',\n+      path: '/cms/aiData',\n       subMenu: [\n-        { icon: <AssessmentIcon />, title: \"기초조사 관리\", path: \"/cms/aiData/survey\" },\n-        { icon: <TextFieldsIcon />, title: \"AI 프롬프트 관리\", path: \"/cms/aiData/prompt\" },\n-        { icon: <QuestionAnswerIcon />, title: \"AI 동문서답 관리\", path: \"/cms/aiData/wrongAnswer\" },\n-        { icon: <ChatIcon />, title: \"AI 대화이력 관리\", path: \"/cms/aiData/conversationHistory\" },\n+        { icon: <AssessmentIcon />, title: '기초조사 관리', path: '/cms/aiData/survey' },\n+        { icon: <TextFieldsIcon />, title: 'AI 프롬프트 관리', path: '/cms/aiData/prompt' },\n+        { icon: <QuestionAnswerIcon />, title: 'AI 동문서답 관리', path: '/cms/aiData/wrongAnswer' },\n+        { icon: <ChatIcon />, title: 'AI 대화이력 관리', path: '/cms/aiData/conversationHistory' },\n       ],\n     },\n     {\n       icon: <SettingsIcon />,\n-      title: \"AI 설정\",\n-      path: \"/cms/aiSetting\",\n+      title: 'AI 설정',\n+      path: '/cms/aiSetting',\n       subMenu: [\n-        { icon: <BusinessIcon />, title: \"회사정보 관리\", path: \"/cms/aiSetting/companyInfo\" },\n-        { icon: <TuneIcon />, title: \"AI 설정관리\", path: \"/cms/aiSetting/mng\" },\n+        { icon: <BusinessIcon />, title: '회사정보 관리', path: '/cms/aiSetting/companyInfo' },\n+        { icon: <TuneIcon />, title: 'AI 설정관리', path: '/cms/aiSetting/mng' },\n       ],\n     },\n     {\n       icon: <StorageIcon />,\n-      title: \"고객 데이터 관리\",\n-      path: \"/cms/userData\",\n+      title: '고객 데이터 관리',\n+      path: '/cms/userData',\n       subMenu: [\n-        { icon: <DownloadIcon />, title: \"견적 다운로드 현황\", path: \"/cms/userData/proposal\" },\n-        { icon: <ContactSupportIcon />, title: \"견적 문의 관리\", path: \"/cms/userData/inquiry\" },\n+        { icon: <DownloadIcon />, title: '견적 다운로드 현황', path: '/cms/userData/proposal' },\n+        { icon: <ContactSupportIcon />, title: '견적 문의 관리', path: '/cms/userData/inquiry' },\n       ],\n     },\n-    { icon: <DescriptionIcon />, title: \"이용 약관 관리\", path: \"/cms/terms\" },\n+    { icon: <DescriptionIcon />, title: '이용 약관 관리', path: '/cms/terms' },\n   ];\n-  \n \n-  // 로그인 준비 전이거나, 로그인 안 된 상태인데 로그인 페이지가 아닌 경우 → 아무 것도 렌더링하지 않음\n   if (!ready || (!isLoggedIn && !isLoginPage)) return null;\n-\n-\n-  // 로그인 페이지는 레이아웃 없이 children만 반환\n   if (isLoginPage) return <>{children}</>;\n \n   return (\n     <OuterLayoutContainer $themeMode=\"light\">\n-      <ToastContainer\n-        position=\"top-center\"\n-        autoClose={3000}\n-        hideProgressBar={false}\n-        newestOnTop={true}\n-        closeOnClick\n-        rtl={false}\n-        pauseOnFocusLoss\n-        draggable\n-        pauseOnHover\n-      />\n+      <ToastContainer position=\"top-center\" autoClose={3000} />\n       <ResponsiveSidebar\n         isCollapsed={isCollapsed}\n         toggleSidebar={toggleSidebar}\n         menuItems={menuItems}\n@@ -162,16 +117,38 @@\n         onMobileSidebarOpenChange={setIsMobileSidebarOpen}\n       >\n         <CustomSidebarHeader\n           isCollapsed={isCollapsed}\n-          // name=\"테스트 사용자\"\n           iconSrc=\"/favicon.ico\"\n-          showTime={false} // 시간 표시\n+          showTime={false}\n         />\n       </ResponsiveSidebar>\n-  \n-      <MainContent $isSidebarCollapsed={effectiveSidebarState}>{children}</MainContent>\n+\n+      <MainContent $isSidebarExpanded={effectiveSidebarExpanded}>\n+        {children}\n+      </MainContent>\n     </OuterLayoutContainer>\n-    \n   );\n-  \n }\n+\n+// --- Styled Components ---\n+\n+const OuterLayoutContainer = styled.div<{ $themeMode: 'light' | 'dark' }>`\n+  width: 100vw;\n+  min-width: 1200px;\n+  height: 100vh;\n+  overflow-x: auto;\n+  background-color: ${({ $themeMode }) =>\n+    $themeMode === 'light'\n+      ? THEME_COLORS.light.background\n+      : THEME_COLORS.dark.background};\n+`;\n+\n+const MainContent = styled.div<{ $isSidebarExpanded: boolean }>`\n+  margin-left: ${({ $isSidebarExpanded }) => ($isSidebarExpanded ? '250px' : '80px')};\n+  transition: margin-left 0.3s ease;\n+  height: 100vh;\n+  overflow-x: auto;\n+  overflow-y: auto;\n+  min-width: 1200px;\n+  box-sizing: border-box;\n+`;\n"
                },
                {
                    "date": 1748493444014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,12 +121,14 @@\n           iconSrc=\"/favicon.ico\"\n           showTime={false}\n         />\n       </ResponsiveSidebar>\n-\n-      <MainContent $isSidebarExpanded={effectiveSidebarExpanded}>\n-        {children}\n-      </MainContent>\n+      <MainContent\n+  $device={device}\n+  $isSidebarExpanded={effectiveSidebarExpanded}\n+>\n+  {children}\n+</MainContent>\n     </OuterLayoutContainer>\n   );\n }\n \n@@ -142,13 +144,27 @@\n       ? THEME_COLORS.light.background\n       : THEME_COLORS.dark.background};\n `;\n \n-const MainContent = styled.div<{ $isSidebarExpanded: boolean }>`\n-  margin-left: ${({ $isSidebarExpanded }) => ($isSidebarExpanded ? '250px' : '80px')};\n-  transition: margin-left 0.3s ease;\n+const MainContent = styled.div<{\n+  $device: 'mobile' | 'tablet' | 'desktop';\n+  $isSidebarExpanded: boolean;\n+}>`\n+  transition: all 0.3s ease;\n   height: 100vh;\n   overflow-x: auto;\n   overflow-y: auto;\n   min-width: 1200px;\n   box-sizing: border-box;\n+\n+  ${({ $device, $isSidebarExpanded }) =>\n+    $device === 'mobile'\n+      ? `\n+    margin-left: 0;\n+    margin-top: 56px;\n+  `\n+      : `\n+    margin-top: 0;\n+    margin-left: ${$isSidebarExpanded ? '250px' : '80px'};\n+  `}\n `;\n+\n"
                },
                {
                    "date": 1748493512884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,16 +155,20 @@\n   overflow-y: auto;\n   min-width: 1200px;\n   box-sizing: border-box;\n \n-  ${({ $device, $isSidebarExpanded }) =>\n-    $device === 'mobile'\n-      ? `\n-    margin-left: 0;\n-    margin-top: 56px;\n-  `\n-      : `\n-    margin-top: 0;\n-    margin-left: ${$isSidebarExpanded ? '250px' : '80px'};\n-  `}\n+  ${({ $device, $isSidebarExpanded }) => {\n+    if ($device === 'mobile') {\n+      return `\n+        margin-top: 56px;\n+        margin-left: ${$isSidebarExpanded ? '250px' : '0'};\n+      `;\n+    } else {\n+      return `\n+        margin-top: 0;\n+        margin-left: ${$isSidebarExpanded ? '250px' : '80px'};\n+      `;\n+    }\n+  }}\n `;\n \n+\n"
                }
            ],
            "date": 1747714804754,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { AdminAuthProvider, useAdminAuth } from \"@/contexts/AdminAuthContext\";\nimport { usePathname, useRouter } from \"next/navigation\";\n\nimport CustomSidebar, { MenuItemConfig } from \"@/components/CustomSidebar/CustomSidebar\";\nimport CustomSidebarHeader from \"@/components/CustomSidebar/CustomSidebarHeader\";\n\n// 아이콘 임포트\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport PeopleIcon from '@mui/icons-material/People';\nimport DatasetIcon from '@mui/icons-material/Dataset';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport ContactSupportIcon from '@mui/icons-material/ContactSupport';\nimport StorageIcon from '@mui/icons-material/Storage';\n\n\n\n\nimport { THEME_COLORS } from \"@/styles/theme_colors\";\nimport { toast, ToastContainer } from 'react-toastify';\n\n\n\n// 메인 콘텐츠 영역 스타일\nconst MainContent = styled.div<{ $isSidebarCollapsed: boolean }>`\n  margin-left: ${({ $isSidebarCollapsed }) => ($isSidebarCollapsed ? \"80px\" : \"250px\")};\n  padding: 20px 40px;\n  transition: margin-left 0.3s ease;\n  height: 100vh;\n  overflow-x: auto; // ✅ 가로 스크롤\n  overflow-y: auto;\n  min-width: 1200px; // ✅ 최소 크기\n  box-sizing: border-box;\n`;\n\n\n\nconst OuterLayoutContainer = styled.div<{ $themeMode: \"light\" | \"dark\" }>`\n  width: 100vw;\n  min-width: 1200px;\n  height: 100vh;\n  overflow-x: auto; // 좌우 스크롤 가능\n  background-color: ${({ $themeMode }) =>\n    $themeMode === \"light\"\n      ? THEME_COLORS.light.background\n      : THEME_COLORS.dark.background};\n`;\n\n\nexport default function CmsLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <AdminAuthProvider>\n      <ProtectedCmsLayout>{children}</ProtectedCmsLayout>\n    </AdminAuthProvider>\n  );\n}\n\nfunction ProtectedCmsLayout({ children }: { children: React.ReactNode }) {\n  const { isLoggedIn, ready } = useAdminAuth();\n  const pathname = usePathname();\n  const router = useRouter();\n  const isLoginPage = pathname === \"/cms/login\";\n  const { logout } = useAdminAuth();\n\n\n  useEffect(() => {\n    if (ready && !isLoggedIn && !isLoginPage) {\n      router.replace(\"/cms/login\");\n    }\n  }, [ready, isLoggedIn, isLoginPage]);\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const toggleSidebar = () => setIsCollapsed((prev) => !prev);\n\n  const handleLogout = () => {\n    logout();               // 상태 및 로컬스토리지 정리\n    router.replace('/cms/login'); // 로그인 페이지로 리디렉션\n    toast.success('로그아웃 되었습니다'); \n  };\n\n  const menuItems: MenuItemConfig[] = [\n    { icon: <DashboardIcon />, title: \"대시보드\", path: \"/cms\" },\n    { icon: <AdminPanelSettingsIcon />, title: \"관리자회원관리\", path: \"/cms/adminMng\" },\n    { icon: <PeopleIcon />, title: \"고객관리\", path: \"/cms/userMng\" },\n    {\n      icon: <DatasetIcon />,\n      title: \"AI 데이터 관리\",\n      path: \"/cms/aiData\",\n      subMenu: [\n        { icon: <AssessmentIcon />, title: \"기초조사 관리\", path: \"/cms/aiData/survey\" },\n        { icon: <TextFieldsIcon />, title: \"AI 프롬프트 관리\", path: \"/cms/aiData/prompt\" },\n        { icon: <QuestionAnswerIcon />, title: \"AI 동문서답 관리\", path: \"/cms/aiData/wrongAnswer\" },\n        { icon: <ChatIcon />, title: \"AI 대화이력 관리\", path: \"/cms/aiData/conversationHistory\" },\n      ],\n    },\n    {\n      icon: <SettingsIcon />,\n      title: \"AI 설정\",\n      path: \"/cms/aiSetting\",\n      subMenu: [\n        { icon: <BusinessIcon />, title: \"회사정보 관리\", path: \"/cms/aiSetting/companyInfo\" },\n        { icon: <TuneIcon />, title: \"AI 설정관리\", path: \"/cms/aiSetting/mng\" },\n      ],\n    },\n    {\n      icon: <StorageIcon />,\n      title: \"고객 데이터 관리\",\n      path: \"/cms/userData\",\n      subMenu: [\n        { icon: <DownloadIcon />, title: \"견적 다운로드 현황\", path: \"/cms/userData/proposal\" },\n        { icon: <ContactSupportIcon />, title: \"견적 문의 관리\", path: \"/cms/userData/inquiry\" },\n      ],\n    },\n    { icon: <DescriptionIcon />, title: \"이용 약관 관리\", path: \"/cms/terms\" },\n  ];\n  \n\n  // 로그인 준비 전이거나, 로그인 안 된 상태인데 로그인 페이지가 아닌 경우 → 아무 것도 렌더링하지 않음\n  if (!ready || (!isLoggedIn && !isLoginPage)) return null;\n\n\n  // 로그인 페이지는 레이아웃 없이 children만 반환\n  if (isLoginPage) return <>{children}</>;\n\n  return (\n    <OuterLayoutContainer $themeMode=\"light\">\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={true}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <CustomSidebar\n        isCollapsed={isCollapsed}\n        toggleSidebar={toggleSidebar}\n        menuItems={menuItems}\n        footerIcon={<LogoutIcon />}\n        onFooterClick={handleLogout}\n      >\n        <CustomSidebarHeader\n          isCollapsed={isCollapsed}\n          name=\"테스트 사용자\"\n          iconSrc=\"/favicon.ico\"\n          showTime={false} // 시간 표시\n        />\n      </CustomSidebar>\n  \n      <MainContent $isSidebarCollapsed={isCollapsed}>{children}</MainContent>\n    </OuterLayoutContainer>\n    \n  );\n  \n}\n"
        }
    ]
}